<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtinyxml2_1_1XMLDocument" xml:lang="en-US">
<title>tinyxml2::XMLDocument Class Reference</title>
<indexterm><primary>tinyxml2::XMLDocument</primary></indexterm>
<para>
<computeroutput>#include &lt;tinyxml2.h&gt;</computeroutput>
</para>
Inheritance diagram for tinyxml2::XMLDocument:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLDocument__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for tinyxml2::XMLDocument:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLDocument__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1_1DepthTracker">DepthTracker</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument_1a57ddf17b6e054dda10af98991b1b8f70">XMLDocument</link> (bool processEntities=true, <link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> whitespaceMode=<link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5a751769aa625fe5fe5286e9779edec56a">PRESERVE_WHITESPACE</link>)</para>

<para>constructor </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument_1af37c47d8e2ba4b2fc81b21a77a32579b">~XMLDocument</link> ()</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a88dfd725068a410aed08f55b825f6907">ToDocument</link> ()</para>

<para>Safely cast to a Document, or null. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1acce8c783cd98e98f0560aa6fb7b96034">ToDocument</link> () const</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1af2b616169e6517182f6725f2498e9a01">Parse</link> (const char *xml, size_t nBytes=static_cast&lt; size_t &gt;(-1))</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a2ebd4647a8af5fc6831b294ac26a150a">LoadFile</link> (const char *filename)</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a5f1d330fad44c52f3d265338dd2a6dc2">LoadFile</link> (FILE *)</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a73ac416b4a2aa0952e841220eb3da18f">SaveFile</link> (const char *filename, bool compact=false)</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a8b95779479a0035acc67b3a61dfe1b74">SaveFile</link> (FILE *fp, bool compact=false)</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLDocument_1a53e6c035b1b539563fef8c817fb30469">ProcessEntities</link> () const</para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a810ce508e6e0365497c2a9deb83c9ca7">WhitespaceMode</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLDocument_1a33fc5d159db873a179fa26338adb05bd">HasBOM</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a14419b698f7c4b140df4e80f3f0c93b0">SetBOM</link> (bool useBOM)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a0e6855771cbe87d839fb301d3646f5b8">RootElement</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a52ea1ace64749d97cf61bf9537fb99ec">RootElement</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a867cf5fa3e3ff6ae4847a8b7ee8ec083">Print</link> (<link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> *streamer=0) const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLDocument_1a9efa54f7ecb37c17ab1fa2b3078ccca1">Accept</link> (<link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> *visitor) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a3c335a700a43d7c363a393142a23f234">NewElement</link> (const char *name)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a386df0befd06aadb5e0cd21381aa955a">NewComment</link> (const char *comment)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1acece5de77a0819f2341b08c1e1ed9987">NewText</link> (const char *text)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1ae519030c0262fa2daff8993681990e16">NewDeclaration</link> (const char *text=0)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1a4954f502c5fd7f49de54c3c0c99bb73d">NewUnknown</link> (const char *text)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1ac1d6e2c7fcc1a660624ac4f68e96380d">DeleteNode</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *node)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a4085d9c52f1d93214311459d6d1fcf17">ClearError</link> ()</para>

<para>Clears the error flags. </para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLDocument_1a34e6318e182e40e3cc4f4ba5d59ed9ed">Error</link> () const</para>

<para>Return true if there was an error parsing the document. </para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1afa3ed33b3107f920ec2b301f805ac17d">ErrorID</link> () const</para>

<para>Return the errorID. </para>
</listitem>
            <listitem><para>const char * <link linkend="_classtinyxml2_1_1XMLDocument_1a1a5f2b63427caffd4cde15781d9d11f9">ErrorName</link> () const</para>
</listitem>
            <listitem><para>const char * <link linkend="_classtinyxml2_1_1XMLDocument_1ae97fff2402a0d01e0509c430b37996b3">ErrorStr</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a1d033945b42e125d933d6231e4571552">PrintError</link> () const</para>

<para>A (trivial) utility function that prints the <link linkend="_classtinyxml2_1_1XMLDocument_1ae97fff2402a0d01e0509c430b37996b3">ErrorStr()</link> to stdout. </para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLDocument_1a57400f816dbe7799ece33615ead9ab76">ErrorLineNum</link> () const</para>

<para>Return the line where the error occurred, or zero if unknown. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a65656b0b2cbc822708eb351504178aaf">Clear</link> ()</para>

<para>Clear the document, resetting it to the initial state. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1af592ffc91514e25a39664521ac83db45">DeepCopy</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *target) const</para>
</listitem>
            <listitem><para>char * <link linkend="_classtinyxml2_1_1XMLDocument_1a25827d1bec509ad566a107e5853ed040">Identify</link> (char *p, <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> **node)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a64dadb2de12e52538d0ff8ba38f323ec">MarkInUse</link> (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *const)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLDocument_1af4f866a4dace2120ec8cdf6f5ff79f61">ShallowClone</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *) const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLDocument_1a6fe5ef18699091844fcf64b56ffa5bf9">ShallowEqual</link> (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *) const</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classtinyxml2_1_1XMLNode">tinyxml2::XMLNode</link>        <itemizedlist>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a6ce3bbe80357f5a4dc5db31a66f2bb18">GetDocument</link> () const</para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501">GetDocument</link> ()</para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9417e1f8a9787ae27741605493514b18">ToElement</link> ()</para>

<para>Safely cast to an Element, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a0aea8c9c5853c35a06da1988486abc60">ToText</link> ()</para>

<para>Safely cast to Text, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5dc13f02ae49e3fa609e426f47c8466d">ToComment</link> ()</para>

<para>Safely cast to a Comment, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a12aa783a3a4445ad5557c7d56cd8dc4a">ToDeclaration</link> ()</para>

<para>Safely cast to a Declaration, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * <link linkend="_classtinyxml2_1_1XMLNode_1aa8a2dd38b786c3b8d406c2047753cbfd">ToUnknown</link> ()</para>

<para>Safely cast to an Unknown, or null. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a717b5e8a2dd19f1375e388eb749a773c">ToElement</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a0563966a4e8df58a3bf1b323eedf839a">ToText</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae78cbef093b115895c1a7b06960396da">ToComment</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a93ef0d07257e5c8f62dc869ef4e23b3b">ToDeclaration</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ab956088fd1ec09c933804000a7a984ea">ToUnknown</link> () const</para>
</listitem>
            <listitem><para>const char * <link linkend="_classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680">Value</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a09dd68cf9eae137579f6e50f36487513">SetValue</link> (const char *val, bool staticMem=false)</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLNode_1a9b5fc636646fda761d342c72e91cb286">GetLineNum</link> () const</para>

<para>Gets the line number the node is in, if the document was parsed from a file. </para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a4d76b30d1bf4b166d3e4fa3419d51595">Parent</link> () const</para>

<para>Get the parent of this node on the DOM. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae092b35e0f94c27ad96d0ac92c038e1e">Parent</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLNode_1ac3ab489e6e202a3cd1762d3b332e89d4">NoChildren</link> () const</para>

<para>Returns true if this node has no children. </para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1abcc2e572dce329539689b426a0840661">FirstChild</link> () const</para>

<para>Get the first child node, or null if none exists. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a3cc3c85d40ce73d6f5849a35debfccfc">FirstChild</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a1bec132dcf085284e0a10755f2cf0d57">FirstChildElement</link> (const char *name=0) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a46c460e1494ccc2691f515a34e78abc0">FirstChildElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a69a29bb8263ff5e9815be180bf27e7af">LastChild</link> () const</para>

<para>Get the last child node, or null if none exists. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5029f38433f2c547ab2c67d20944563f">LastChild</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a609e02f02044f39b928d1a3e0de9f532">LastChildElement</link> (const char *name=0) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a4b3ee7343ed49c2054fe64ef5639b2ff">LastChildElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a92ee96b0d8628bc609f1d34e56d69dfa">PreviousSibling</link> () const</para>

<para>Get the previous (left) sibling node of this node. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5cbc1d7444770fb364a431441b81f21a">PreviousSibling</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9453cda5e970375a7b1b2099f8a7c40a">PreviousSiblingElement</link> (const char *name=0) const</para>

<para>Get the previous (left) sibling element of this node, with an optionally supplied name. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1abee2e91cc895adfb8ba24b0b6ec14f00">PreviousSiblingElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1af986c568061b020cf6232bec091388c0">NextSibling</link> () const</para>

<para>Get the next (right) sibling node of this node. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a05d04a9c06dc48ff8473c77774ee94eb">NextSibling</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a14ea560df31110ff07a9f566171bf797">NextSiblingElement</link> (const char *name=0) const</para>

<para>Get the next (right) sibling element of this node, with an optionally supplied name. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a83f054589f5a669c0dcca72bfd6bfb09">NextSiblingElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae3b422e98914d6002ca99bb1d2837103">InsertEndChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae6ab0f078ab8edba2e2c6d1d81a3661e">LinkEndChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ac609a8f3ea949027f439280c640bbaf2">InsertFirstChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9275138a1b8dd5d8e2c26789bdc23ac8">InsertAfterChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *afterThis, <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a0360085cc54df5bff85d5c5da13afdce">DeleteChildren</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a363b6edbd6ebd55f8387d2b89f2b0921">DeleteChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *node)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a3bb369fd733f1989b751d99a9417adab">DeepClone</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *target) const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a002978fc889cc011d143185f2377eca2">SetUserData</link> (void *userData)</para>
</listitem>
            <listitem><para>void * <link linkend="_classtinyxml2_1_1XMLNode_1a18cc02ebd0b06f6bf5db7ef87653e00e">GetUserData</link> () const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static const char * <link linkend="_classtinyxml2_1_1XMLDocument_1a0c8b137be9711ce4831e15f30486154c">ErrorIDToName</link> (<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> errorID)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument_1adcea490db02a099d99440cd14a87d9e4">XMLDocument</link> (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1aa542c2cf1276ee4bd778f16d196fe222">operator=</link> (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1aeb556e0e2bed02a73a6c5aaf19759e9a">Parse</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1abffeba53b165f55f385ea7063a93bc95">SetError</link> (<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> error, int lineNum, const char *format,...)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a4d4aa7ec8e078ee6b449471e187d2d67">PushDepth</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLDocument_1a863c45ff542c2b76af0e6c227a743c85">PopDepth</link> ()</para>
</listitem>
            <listitem><para>template&lt;class NodeType , int PoolElementSize&gt; </para><para>NodeType * <link linkend="_classtinyxml2_1_1XMLDocument_1acda2123b71a6e6534be9f48e75ea680a">CreateUnlinkedNode</link> (<link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; PoolElementSize &gt; &amp;pool)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLDocument_1a1dbdc7feaa58007403c20243ac5abbd3">_writeBOM</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLDocument_1a9f768cb74fb5ccbadeffa436916f0194">_processEntities</link></para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a61270d643f810975656da2054e1e1622">_errorID</link></para>
</listitem>
            <listitem><para><link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> <link linkend="_classtinyxml2_1_1XMLDocument_1afec08bf4b1c57b487ba3c6855cfe5478">_whitespaceMode</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1StrPair">StrPair</link> <link linkend="_classtinyxml2_1_1XMLDocument_1a13a35ff680994da3fc2d2b2e62a33f8d">_errorStr</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLDocument_1a7865f254baf1f615c5250aa31bb262d1">_errorLineNum</link></para>
</listitem>
            <listitem><para>char * <link linkend="_classtinyxml2_1_1XMLDocument_1a7913ff24220a40e2e2b49a5137b43d29">_charBuffer</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLDocument_1a802c62efacc325f1acb9cfd331b59ea5">_parseCurLineNum</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLDocument_1adf4da174d246a262137aceb38e37dc77">_parsingDepth</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt; <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *, 10 &gt; <link linkend="_classtinyxml2_1_1XMLDocument_1ae539013200f75e3b048270fc4de0bf09">_unlinked</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; sizeof(<link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link>)&gt; <link linkend="_classtinyxml2_1_1XMLDocument_1ac7ee8e661c4b687c036bec1f3d850e6d">_elementPool</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; sizeof(<link linkend="_classtinyxml2_1_1XMLAttribute">XMLAttribute</link>)&gt; <link linkend="_classtinyxml2_1_1XMLDocument_1a92c07860f58b0a26a882a760be36bd71">_attributePool</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; sizeof(<link linkend="_classtinyxml2_1_1XMLText">XMLText</link>)&gt; <link linkend="_classtinyxml2_1_1XMLDocument_1a616008c4d1decc94ae4c32001ef538ec">_textPool</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; sizeof(<link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link>)&gt; <link linkend="_classtinyxml2_1_1XMLDocument_1a26329ee616fc837e52ca9f584645ac1a">_commentPool</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static const char * <link linkend="_classtinyxml2_1_1XMLDocument_1aaa8fd366adfb2c368ed7c13e471f54ae">_errorNames</link> [<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08a9ebb2775c56387353f5b2de94f6ab71d">XML_ERROR_COUNT</link>]</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1a8233f9dc4d61d90e93be2a3647c6d957">XMLNode</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1ae50b59416e98bbe7e4bc87df40092109">XMLText</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1acee9e261162d4236fb2c30312c54cd4c">XMLComment</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1a93d2c2c2db3973083b7d6e7f6f358160">XMLDeclaration</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLDocument_1a6946948274f7a02f5e69b5dbeaea9b35">XMLUnknown</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Member Functions inherited from <link linkend="_classtinyxml2_1_1XMLNode">tinyxml2::XMLNode</link>        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode_1a29868df6ca383d574f584dfdd15105b6">XMLNode</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLNode_1a8ae1bcd23a08ce5c5f97b2ab347b0893">~XMLNode</link> ()</para>
</listitem>
            <listitem><para>virtual char * <link linkend="_classtinyxml2_1_1XMLNode_1ac7df464d8029c9b91e96ab2499222afe">ParseDeep</link> (char *p, <link linkend="_classtinyxml2_1_1StrPair">StrPair</link> *parentEndTag, int *curLineNumPtr)</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_classtinyxml2_1_1XMLNode">tinyxml2::XMLNode</link>        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a8d2d2be0bb6797625551eb0e91f0ff62">_document</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a176dd1c4965c21c366de192164aa2c13">_parent</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1StrPair">StrPair</link> <link linkend="_classtinyxml2_1_1XMLNode_1a3ea9884098b8379de2bb5ab3fc85c0fc">_value</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLNode_1ab336ed023e15be202ff3b410be01b804">_parseLineNum</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1aa20c91e4213dc930c5bdf420322ca342">_firstChild</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a099b6560ae44ab9edb8453aaf1a3747b">_lastChild</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9739eb0fb9a1188266052055e7a6bf6b">_prev</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a27e985496b37dd00eb5b9cf59b9e3fb1">_next</link></para>
</listitem>
            <listitem><para>void * <link linkend="_classtinyxml2_1_1XMLNode_1ac2d5cc463a6c95ec5907d57a119c56da">_userData</link></para>
</listitem>
        </itemizedlist>
<section>
<title>Detailed Description</title>

<para>A Document binds together all the functionality. It can be saved, loaded, and printed to the screen. All Nodes are connected and allocated to a Document. If the Document is deleted, all its Nodes are also deleted. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a57ddf17b6e054dda10af98991b1b8f70"/><section>
    <title>XMLDocument()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>XMLDocument</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLDocument</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLDocument::XMLDocument (bool processEntities = <computeroutput>true</computeroutput>
, <link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> whitespaceMode = <computeroutput><link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5a751769aa625fe5fe5286e9779edec56a">PRESERVE_WHITESPACE</link></computeroutput>
)</computeroutput></para><para>

<para>constructor </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1af37c47d8e2ba4b2fc81b21a77a32579b"/><section>
    <title>~XMLDocument()</title>
<indexterm><primary>~XMLDocument</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>~XMLDocument</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLDocument::~XMLDocument ( )</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1adcea490db02a099d99440cd14a87d9e4"/><section>
    <title>XMLDocument()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>XMLDocument</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLDocument</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLDocument::XMLDocument (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a9efa54f7ecb37c17ab1fa2b3078ccca1"/><section>
    <title>Accept()</title>
<indexterm><primary>Accept</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Accept</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLDocument::Accept (<link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> * visitor) const<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Accept a hierarchical visit of the nodes in the TinyXML-2 DOM. Every node in the XML tree will be conditionally visited and the host will be called back via the <link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> interface.</para>

<para>This is essentially a SAX interface for TinyXML-2. (Note however it doesn&apos;t re-parse the XML for the callbacks, so the performance of TinyXML-2 is unchanged by using this interface versus any other.)</para>

<para>The interface has been based on ideas from:</para>

<para><itemizedlist>
<listitem>
<para><link xlink:href="http://www.saxproject.org/">http://www.saxproject.org/</link></para>
</listitem><listitem>
<para><link xlink:href="http://c2.com/cgi/wiki?HierarchicalVisitorPattern">http://c2.com/cgi/wiki?HierarchicalVisitorPattern</link></para>
</listitem></itemizedlist>
</para>

<para>Which are both good references for &quot;visiting&quot;.</para>

<para>An example of using <link linkend="_classtinyxml2_1_1XMLDocument_1a9efa54f7ecb37c17ab1fa2b3078ccca1">Accept()</link>: <literallayout><computeroutput>XMLPrinter printer;
tinyxmlDoc.Accept( &amp;printer );
const char* xmlcstr = printer.CStr();
</computeroutput></literallayout> </para>
<para>
Implements <link linkend="_classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785">tinyxml2::XMLNode</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a65656b0b2cbc822708eb351504178aaf"/><section>
    <title>Clear()</title>
<indexterm><primary>Clear</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Clear</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::Clear ( )</computeroutput></para><para>

<para>Clear the document, resetting it to the initial state. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a4085d9c52f1d93214311459d6d1fcf17"/><section>
    <title>ClearError()</title>
<indexterm><primary>ClearError</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ClearError</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::ClearError ( )</computeroutput></para><para>

<para>Clears the error flags. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1acda2123b71a6e6534be9f48e75ea680a"/><section>
    <title>CreateUnlinkedNode()</title>
<indexterm><primary>CreateUnlinkedNode</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>CreateUnlinkedNode</secondary></indexterm>
<computeroutput>template&lt;class NodeType , int PoolElementSize&gt; </computeroutput><para><computeroutput>NodeType * tinyxml2::XMLDocument::CreateUnlinkedNode (<link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt; PoolElementSize &gt; &amp; pool)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLDocument_acda2123b71a6e6534be9f48e75ea680a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1af592ffc91514e25a39664521ac83db45"/><section>
    <title>DeepCopy()</title>
<indexterm><primary>DeepCopy</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>DeepCopy</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::DeepCopy (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * target) const</computeroutput></para>
<para>Copies this document to a target document. The target will be completely cleared before the copy. If you want to copy a sub-tree, see <link linkend="_classtinyxml2_1_1XMLNode_1a3bb369fd733f1989b751d99a9417adab">XMLNode::DeepClone()</link>.</para>

<para>NOTE: that the &apos;target&apos; must be non-null. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ac1d6e2c7fcc1a660624ac4f68e96380d"/><section>
    <title>DeleteNode()</title>
<indexterm><primary>DeleteNode</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>DeleteNode</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::DeleteNode (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * node)</computeroutput></para>
<para>Delete a node associated with this document. It will be unlinked from the DOM. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a34e6318e182e40e3cc4f4ba5d59ed9ed"/><section>
    <title>Error()</title>
<indexterm><primary>Error</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Error</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLDocument::Error ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return true if there was an error parsing the document. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1afa3ed33b3107f920ec2b301f805ac17d"/><section>
    <title>ErrorID()</title>
<indexterm><primary>ErrorID</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ErrorID</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::ErrorID ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return the errorID. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a0c8b137be9711ce4831e15f30486154c"/><section>
    <title>ErrorIDToName()</title>
<indexterm><primary>ErrorIDToName</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ErrorIDToName</secondary></indexterm>
<para><computeroutput>static const char * tinyxml2::XMLDocument::ErrorIDToName (<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> errorID)<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a57400f816dbe7799ece33615ead9ab76"/><section>
    <title>ErrorLineNum()</title>
<indexterm><primary>ErrorLineNum</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ErrorLineNum</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLDocument::ErrorLineNum ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Return the line where the error occurred, or zero if unknown. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a1a5f2b63427caffd4cde15781d9d11f9"/><section>
    <title>ErrorName()</title>
<indexterm><primary>ErrorName</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ErrorName</secondary></indexterm>
<para><computeroutput>const char * tinyxml2::XMLDocument::ErrorName ( ) const</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ae97fff2402a0d01e0509c430b37996b3"/><section>
    <title>ErrorStr()</title>
<indexterm><primary>ErrorStr</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ErrorStr</secondary></indexterm>
<para><computeroutput>const char * tinyxml2::XMLDocument::ErrorStr ( ) const</computeroutput></para>
<para>Returns a &quot;long form&quot; error description. A hopefully helpful diagnostic with location, line number, and/or additional info. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a33fc5d159db873a179fa26338adb05bd"/><section>
    <title>HasBOM()</title>
<indexterm><primary>HasBOM</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>HasBOM</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLDocument::HasBOM ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Returns true if this document has a leading Byte Order Mark of UTF8. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a25827d1bec509ad566a107e5853ed040"/><section>
    <title>Identify()</title>
<indexterm><primary>Identify</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Identify</secondary></indexterm>
<para><computeroutput>char * tinyxml2::XMLDocument::Identify (char * p, <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> ** node)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a2ebd4647a8af5fc6831b294ac26a150a"/><section>
    <title>LoadFile()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LoadFile</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>LoadFile</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::LoadFile (const char * filename)</computeroutput></para>
<para>Load an XML file from disk. Returns XML_SUCCESS (0) on success, or an errorID. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a5f1d330fad44c52f3d265338dd2a6dc2"/><section>
    <title>LoadFile()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LoadFile</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>LoadFile</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::LoadFile (FILE * )</computeroutput></para>
<para>Load an XML file from disk. You are responsible for providing and closing the FILE*.</para>

<para>NOTE: The file should be opened as binary (&quot;rb&quot;) not text in order for TinyXML-2 to correctly do newline normalization.</para>

<para>Returns XML_SUCCESS (0) on success, or an errorID. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a64dadb2de12e52538d0ff8ba38f323ec"/><section>
    <title>MarkInUse()</title>
<indexterm><primary>MarkInUse</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>MarkInUse</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::MarkInUse (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * const )</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a386df0befd06aadb5e0cd21381aa955a"/><section>
    <title>NewComment()</title>
<indexterm><primary>NewComment</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>NewComment</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * tinyxml2::XMLDocument::NewComment (const char * comment)</computeroutput></para>
<para>Create a new Comment associated with this Document. The memory for the Comment is managed by the Document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ae519030c0262fa2daff8993681990e16"/><section>
    <title>NewDeclaration()</title>
<indexterm><primary>NewDeclaration</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>NewDeclaration</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * tinyxml2::XMLDocument::NewDeclaration (const char * text = <computeroutput>0</computeroutput>
)</computeroutput></para>
<para>Create a new Declaration associated with this Document. The memory for the object is managed by the Document.</para>

<para>If the &apos;text&apos; param is null, the standard declaration is used.: <literallayout><computeroutput>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a3c335a700a43d7c363a393142a23f234"/><section>
    <title>NewElement()</title>
<indexterm><primary>NewElement</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>NewElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLDocument::NewElement (const char * name)</computeroutput></para>
<para>Create a new Element associated with this Document. The memory for the Element is managed by the Document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1acece5de77a0819f2341b08c1e1ed9987"/><section>
    <title>NewText()</title>
<indexterm><primary>NewText</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>NewText</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * tinyxml2::XMLDocument::NewText (const char * text)</computeroutput></para>
<para>Create a new Text associated with this Document. The memory for the Text is managed by the Document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a4954f502c5fd7f49de54c3c0c99bb73d"/><section>
    <title>NewUnknown()</title>
<indexterm><primary>NewUnknown</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>NewUnknown</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * tinyxml2::XMLDocument::NewUnknown (const char * text)</computeroutput></para>
<para>Create a new Unknown associated with this Document. The memory for the object is managed by the Document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1aa542c2cf1276ee4bd778f16d196fe222"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::operator= (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1aeb556e0e2bed02a73a6c5aaf19759e9a"/><section>
    <title>Parse()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Parse</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Parse</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::Parse ( )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1af2b616169e6517182f6725f2498e9a01"/><section>
    <title>Parse()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Parse</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Parse</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::Parse (const char * xml, size_t nBytes = <computeroutput>static_cast&lt;&#160;size_t&#160;&gt;(-1)</computeroutput>
)</computeroutput></para>
<para>Parse an XML file from a character string. Returns XML_SUCCESS (0) on success, or an errorID.</para>

<para>You may optionally pass in the &apos;nBytes&apos;, which is the number of bytes which will be parsed. If not specified, TinyXML-2 will assume &apos;xml&apos; points to a null terminated string. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a863c45ff542c2b76af0e6c227a743c85"/><section>
    <title>PopDepth()</title>
<indexterm><primary>PopDepth</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>PopDepth</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::PopDepth ( )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a867cf5fa3e3ff6ae4847a8b7ee8ec083"/><section>
    <title>Print()</title>
<indexterm><primary>Print</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>Print</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::Print (<link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> * streamer = <computeroutput>0</computeroutput>
) const</computeroutput></para>
<para>Print the Document. If the Printer is not provided, it will print to stdout. If you provide Printer, this can print to a file: <literallayout><computeroutput>XMLPrinter printer( fp );
doc.Print( &amp;printer );
</computeroutput></literallayout></para>

<para>Or you can use a printer to print to memory: <literallayout><computeroutput>XMLPrinter printer;
doc.Print( &amp;printer );
// printer.CStr() has a const char* to the XML
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a1d033945b42e125d933d6231e4571552"/><section>
    <title>PrintError()</title>
<indexterm><primary>PrintError</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>PrintError</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::PrintError ( ) const</computeroutput></para><para>

<para>A (trivial) utility function that prints the <link linkend="_classtinyxml2_1_1XMLDocument_1ae97fff2402a0d01e0509c430b37996b3">ErrorStr()</link> to stdout. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a53e6c035b1b539563fef8c817fb30469"/><section>
    <title>ProcessEntities()</title>
<indexterm><primary>ProcessEntities</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ProcessEntities</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLDocument::ProcessEntities ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a4d4aa7ec8e078ee6b449471e187d2d67"/><section>
    <title>PushDepth()</title>
<indexterm><primary>PushDepth</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>PushDepth</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::PushDepth ( )<computeroutput>[private]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLDocument_a4d4aa7ec8e078ee6b449471e187d2d67_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a0e6855771cbe87d839fb301d3646f5b8"/><section>
    <title>RootElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>RootElement</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>RootElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLDocument::RootElement ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Return the root element of DOM. Equivalent to <link linkend="_classtinyxml2_1_1XMLNode_1a1bec132dcf085284e0a10755f2cf0d57">FirstChildElement()</link>. To get the first node, use <link linkend="_classtinyxml2_1_1XMLNode_1a3cc3c85d40ce73d6f5849a35debfccfc">FirstChild()</link>. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a52ea1ace64749d97cf61bf9537fb99ec"/><section>
    <title>RootElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>RootElement</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>RootElement</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLDocument::RootElement ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a73ac416b4a2aa0952e841220eb3da18f"/><section>
    <title>SaveFile()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>SaveFile</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>SaveFile</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::SaveFile (const char * filename, bool compact = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>Save the XML file to disk. Returns XML_SUCCESS (0) on success, or an errorID. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a8b95779479a0035acc67b3a61dfe1b74"/><section>
    <title>SaveFile()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>SaveFile</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>SaveFile</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::SaveFile (FILE * fp, bool compact = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>Save the XML file to disk. You are responsible for providing and closing the FILE*.</para>

<para>Returns XML_SUCCESS (0) on success, or an errorID. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a14419b698f7c4b140df4e80f3f0c93b0"/><section>
    <title>SetBOM()</title>
<indexterm><primary>SetBOM</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>SetBOM</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::SetBOM (bool useBOM)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Sets whether to write the BOM when writing the file. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1abffeba53b165f55f385ea7063a93bc95"/><section>
    <title>SetError()</title>
<indexterm><primary>SetError</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>SetError</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLDocument::SetError (<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> error, int lineNum, const char * format,  ...)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1af4f866a4dace2120ec8cdf6f5ff79f61"/><section>
    <title>ShallowClone()</title>
<indexterm><primary>ShallowClone</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ShallowClone</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLDocument::ShallowClone (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * document) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Make a copy of this node, but not its children. You may pass in a Document pointer that will be the owner of the new Node. If the &apos;document&apos; is null, then the node returned will be allocated from the current Document. (this-&gt;<link linkend="_classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501">GetDocument()</link>)</para>

<para>Note: if called on a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>, this will return null. </para>
<para>
Implements <link linkend="_classtinyxml2_1_1XMLNode_1a9046880c05b81ad99ee645f4b2a53ecd">tinyxml2::XMLNode</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a6fe5ef18699091844fcf64b56ffa5bf9"/><section>
    <title>ShallowEqual()</title>
<indexterm><primary>ShallowEqual</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ShallowEqual</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLDocument::ShallowEqual (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * compare) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Test if 2 nodes are the same, but don&apos;t test children. The 2 nodes do not need to be in the same Document.</para>

<para>Note: if called on a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>, this will return false. </para>
<para>
Implements <link linkend="_classtinyxml2_1_1XMLNode_1a7ce18b751c3ea09eac292dca264f9226">tinyxml2::XMLNode</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a88dfd725068a410aed08f55b825f6907"/><section>
    <title>ToDocument()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToDocument</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ToDocument</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLDocument::ToDocument ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to a Document, or null. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLNode_1a6107c3f57ab6e0755959947762953652">tinyxml2::XMLNode</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1acce8c783cd98e98f0560aa6fb7b96034"/><section>
    <title>ToDocument()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToDocument</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>ToDocument</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLDocument::ToDocument ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLNode_1ad7e7fd167ffb01b64e3371c0d2cda19b">tinyxml2::XMLNode</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a810ce508e6e0365497c2a9deb83c9ca7"/><section>
    <title>WhitespaceMode()</title>
<indexterm><primary>WhitespaceMode</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>WhitespaceMode</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> tinyxml2::XMLDocument::WhitespaceMode ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1acee9e261162d4236fb2c30312c54cd4c"/><section>
    <title>XMLComment</title>
<indexterm><primary>XMLComment</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLComment</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a93d2c2c2db3973083b7d6e7f6f358160"/><section>
    <title>XMLDeclaration</title>
<indexterm><primary>XMLDeclaration</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLDeclaration</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ac2fba9b6e452829dd892f7392c24e0eb"/><section>
    <title>XMLElement</title>
<indexterm><primary>XMLElement</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLElement</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a8233f9dc4d61d90e93be2a3647c6d957"/><section>
    <title>XMLNode</title>
<indexterm><primary>XMLNode</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLNode</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ae50b59416e98bbe7e4bc87df40092109"/><section>
    <title>XMLText</title>
<indexterm><primary>XMLText</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLText</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLText">XMLText</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a6946948274f7a02f5e69b5dbeaea9b35"/><section>
    <title>XMLUnknown</title>
<indexterm><primary>XMLUnknown</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>XMLUnknown</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a92c07860f58b0a26a882a760be36bd71"/><section>
    <title>_attributePool</title>
<indexterm><primary>_attributePool</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_attributePool</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt;sizeof(<link linkend="_classtinyxml2_1_1XMLAttribute">XMLAttribute</link>)&gt; tinyxml2::XMLDocument::_attributePool<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a7913ff24220a40e2e2b49a5137b43d29"/><section>
    <title>_charBuffer</title>
<indexterm><primary>_charBuffer</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_charBuffer</secondary></indexterm>
<para><computeroutput>char* tinyxml2::XMLDocument::_charBuffer<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a26329ee616fc837e52ca9f584645ac1a"/><section>
    <title>_commentPool</title>
<indexterm><primary>_commentPool</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_commentPool</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt;sizeof(<link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link>)&gt; tinyxml2::XMLDocument::_commentPool<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ac7ee8e661c4b687c036bec1f3d850e6d"/><section>
    <title>_elementPool</title>
<indexterm><primary>_elementPool</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_elementPool</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt;sizeof(<link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link>)&gt; tinyxml2::XMLDocument::_elementPool<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a61270d643f810975656da2054e1e1622"/><section>
    <title>_errorID</title>
<indexterm><primary>_errorID</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_errorID</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08">XMLError</link> tinyxml2::XMLDocument::_errorID<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a7865f254baf1f615c5250aa31bb262d1"/><section>
    <title>_errorLineNum</title>
<indexterm><primary>_errorLineNum</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_errorLineNum</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLDocument::_errorLineNum<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1aaa8fd366adfb2c368ed7c13e471f54ae"/><section>
    <title>_errorNames</title>
<indexterm><primary>_errorNames</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_errorNames</secondary></indexterm>
<para><computeroutput>const char* tinyxml2::XMLDocument::_errorNames[<link linkend="_namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08a9ebb2775c56387353f5b2de94f6ab71d">XML_ERROR_COUNT</link>]<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a13a35ff680994da3fc2d2b2e62a33f8d"/><section>
    <title>_errorStr</title>
<indexterm><primary>_errorStr</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_errorStr</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1StrPair">StrPair</link> tinyxml2::XMLDocument::_errorStr<computeroutput>[mutable]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a802c62efacc325f1acb9cfd331b59ea5"/><section>
    <title>_parseCurLineNum</title>
<indexterm><primary>_parseCurLineNum</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_parseCurLineNum</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLDocument::_parseCurLineNum<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1adf4da174d246a262137aceb38e37dc77"/><section>
    <title>_parsingDepth</title>
<indexterm><primary>_parsingDepth</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_parsingDepth</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLDocument::_parsingDepth<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a9f768cb74fb5ccbadeffa436916f0194"/><section>
    <title>_processEntities</title>
<indexterm><primary>_processEntities</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_processEntities</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLDocument::_processEntities<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a616008c4d1decc94ae4c32001ef538ec"/><section>
    <title>_textPool</title>
<indexterm><primary>_textPool</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_textPool</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1MemPoolT">MemPoolT</link>&lt;sizeof(<link linkend="_classtinyxml2_1_1XMLText">XMLText</link>)&gt; tinyxml2::XMLDocument::_textPool<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1ae539013200f75e3b048270fc4de0bf09"/><section>
    <title>_unlinked</title>
<indexterm><primary>_unlinked</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_unlinked</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt;<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *, 10&gt; tinyxml2::XMLDocument::_unlinked<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1afec08bf4b1c57b487ba3c6855cfe5478"/><section>
    <title>_whitespaceMode</title>
<indexterm><primary>_whitespaceMode</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_whitespaceMode</secondary></indexterm>
<para><computeroutput><link linkend="_namespacetinyxml2_1a7f91d00f77360f850fd5da0861e27dd5">Whitespace</link> tinyxml2::XMLDocument::_whitespaceMode<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLDocument_1a1dbdc7feaa58007403c20243ac5abbd3"/><section>
    <title>_writeBOM</title>
<indexterm><primary>_writeBOM</primary><secondary>tinyxml2::XMLDocument</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLDocument</primary><secondary>_writeBOM</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLDocument::_writeBOM<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
include/<link linkend="_tinyxml2_8h">tinyxml2.h</link></section>
</section>
