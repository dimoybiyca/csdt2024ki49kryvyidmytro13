<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtinyxml2_1_1DynArray" xml:lang="en-US">
<title>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt; Class Template Reference</title>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;tinyxml2.h&gt;</computeroutput>
</para>
Inheritance diagram for tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1DynArray__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1DynArray__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray_1aaad72f384e761c70a4519183eb8fea17">DynArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray_1a4a6aefdca7fe0d3f4068e31870a5adee">~DynArray</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1af87a804cd831226d069274b44b74b8bc">Clear</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1aea7ffe983b5d3284bd43171afd7c99d0">Push</link> (T t)</para>
</listitem>
            <listitem><para>T * <link linkend="_classtinyxml2_1_1DynArray_1abb25593c9f051748e0f30ed179b510e1">PushArr</link> (int count)</para>
</listitem>
            <listitem><para>T <link linkend="_classtinyxml2_1_1DynArray_1a27a3f2f6f869815b6eabb3ea40cf0712">Pop</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1ab8b8c94a2312ab27e2846f0d61ef677a">PopArr</link> (int count)</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1DynArray_1a044fc26f44ed3e96ffaeac542188149e">Empty</link> () const</para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classtinyxml2_1_1DynArray_1a47382b773d83ea6defac7954f7100ffc">operator[]</link> (int i)</para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classtinyxml2_1_1DynArray_1a77cd2037f38441694c60d44c84c23c38">operator[]</link> (int i) const</para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classtinyxml2_1_1DynArray_1a3a800456513ffa873482016fa15e5efe">PeekTop</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1DynArray_1a67614d80847eb92cab330f1a5849a9a2">Size</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1DynArray_1a8e101fdf5b4248ac119d7dca6d0f5421">Capacity</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1aa72c644f8b5e9ec5dab5b66c88f5665f">SwapRemove</link> (int i)</para>
</listitem>
            <listitem><para>const T * <link linkend="_classtinyxml2_1_1DynArray_1a77f3b149fa566e4cf8d3138d8df92e66">Mem</link> () const</para>
</listitem>
            <listitem><para>T * <link linkend="_classtinyxml2_1_1DynArray_1a5601461a9aca663d5ae0c24da1125821">Mem</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray_1a8e2251588f079f2e7a4080b2c53dabea">DynArray</link> (const <link linkend="_classtinyxml2_1_1DynArray">DynArray</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1a46fa3bff1a6abe7cafad46707d0bb890">operator=</link> (const <link linkend="_classtinyxml2_1_1DynArray">DynArray</link> &amp;)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1DynArray_1a30f2dec82744b45667452e6ce3d51e32">EnsureCapacity</link> (int cap)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>T * <link linkend="_classtinyxml2_1_1DynArray_1ac8511e876d55f3ec64277516273434fd">_mem</link></para>
</listitem>
            <listitem><para>T <link linkend="_classtinyxml2_1_1DynArray_1a26ed1f7dab98229d2ed867a07ee427df">_pool</link> [INITIAL_SIZE]</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1DynArray_1aee2522b771ca30bc09bff4d5b3176bfc">_allocated</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1DynArray_1a40f0578cc1912eed17fb29f64daf6ae9">_size</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtinyxml2_1_1DynArray_1aaad72f384e761c70a4519183eb8fea17"/><section>
    <title>DynArray()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>DynArray</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>DynArray</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::DynArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a4a6aefdca7fe0d3f4068e31870a5adee"/><section>
    <title>~DynArray()</title>
<indexterm><primary>~DynArray</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>~DynArray</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::~<link linkend="_classtinyxml2_1_1DynArray">DynArray</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a8e2251588f079f2e7a4080b2c53dabea"/><section>
    <title>DynArray()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>DynArray</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>DynArray</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::DynArray (const <link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt; T, INITIAL_SIZE &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a8e101fdf5b4248ac119d7dca6d0f5421"/><section>
    <title>Capacity()</title>
<indexterm><primary>Capacity</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Capacity</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>int <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Capacity ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1af87a804cd831226d069274b44b74b8bc"/><section>
    <title>Clear()</title>
<indexterm><primary>Clear</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Clear</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Clear ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a044fc26f44ed3e96ffaeac542188149e"/><section>
    <title>Empty()</title>
<indexterm><primary>Empty</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Empty</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>bool <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Empty ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a30f2dec82744b45667452e6ce3d51e32"/><section>
    <title>EnsureCapacity()</title>
<indexterm><primary>EnsureCapacity</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>EnsureCapacity</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::EnsureCapacity (int cap)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1DynArray_a30f2dec82744b45667452e6ce3d51e32_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a5601461a9aca663d5ae0c24da1125821"/><section>
    <title>Mem()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Mem</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Mem</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T * <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Mem ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a77f3b149fa566e4cf8d3138d8df92e66"/><section>
    <title>Mem()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Mem</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Mem</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>const T * <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Mem ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a46fa3bff1a6abe7cafad46707d0bb890"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::operator= (const <link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt; T, INITIAL_SIZE &gt; &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a47382b773d83ea6defac7954f7100ffc"/><section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::operator[] (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a77cd2037f38441694c60d44c84c23c38"/><section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::operator[] (int i) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a3a800456513ffa873482016fa15e5efe"/><section>
    <title>PeekTop()</title>
<indexterm><primary>PeekTop</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>PeekTop</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::PeekTop ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a27a3f2f6f869815b6eabb3ea40cf0712"/><section>
    <title>Pop()</title>
<indexterm><primary>Pop</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Pop</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Pop ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1ab8b8c94a2312ab27e2846f0d61ef677a"/><section>
    <title>PopArr()</title>
<indexterm><primary>PopArr</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>PopArr</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::PopArr (int count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1aea7ffe983b5d3284bd43171afd7c99d0"/><section>
    <title>Push()</title>
<indexterm><primary>Push</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Push</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Push (T t)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1DynArray_aea7ffe983b5d3284bd43171afd7c99d0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1abb25593c9f051748e0f30ed179b510e1"/><section>
    <title>PushArr()</title>
<indexterm><primary>PushArr</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>PushArr</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T * <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::PushArr (int count)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1DynArray_abb25593c9f051748e0f30ed179b510e1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a67614d80847eb92cab330f1a5849a9a2"/><section>
    <title>Size()</title>
<indexterm><primary>Size</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>Size</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>int <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::Size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1aa72c644f8b5e9ec5dab5b66c88f5665f"/><section>
    <title>SwapRemove()</title>
<indexterm><primary>SwapRemove</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>SwapRemove</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>void <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::SwapRemove (int i)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classtinyxml2_1_1DynArray_1aee2522b771ca30bc09bff4d5b3176bfc"/><section>
    <title>_allocated</title>
<indexterm><primary>_allocated</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>_allocated</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>int <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::_allocated<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1ac8511e876d55f3ec64277516273434fd"/><section>
    <title>_mem</title>
<indexterm><primary>_mem</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>_mem</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T* <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::_mem<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a26ed1f7dab98229d2ed867a07ee427df"/><section>
    <title>_pool</title>
<indexterm><primary>_pool</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>_pool</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>T <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::_pool[INITIAL_SIZE]<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1DynArray_1a40f0578cc1912eed17fb29f64daf6ae9"/><section>
    <title>_size</title>
<indexterm><primary>_size</primary><secondary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</secondary></indexterm>
<indexterm><primary>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</primary><secondary>_size</secondary></indexterm>
<computeroutput>template&lt;class T , int INITIAL_SIZE&gt; </computeroutput><para><computeroutput>int <link linkend="_classtinyxml2_1_1DynArray">tinyxml2::DynArray</link>&lt; T, INITIAL_SIZE &gt;::_size<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
include/<link linkend="_tinyxml2_8h">tinyxml2.h</link></section>
</section>
