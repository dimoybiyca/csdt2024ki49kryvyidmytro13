<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtinyxml2_1_1XMLNode" xml:lang="en-US">
<title>tinyxml2::XMLNode Class Reference</title>
<indexterm><primary>tinyxml2::XMLNode</primary></indexterm>
<para>
<computeroutput>#include &lt;tinyxml2.h&gt;</computeroutput>
</para>
Inheritance diagram for tinyxml2::XMLNode:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLNode__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for tinyxml2::XMLNode:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLNode__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a6ce3bbe80357f5a4dc5db31a66f2bb18">GetDocument</link> () const</para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501">GetDocument</link> ()</para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9417e1f8a9787ae27741605493514b18">ToElement</link> ()</para>

<para>Safely cast to an Element, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a0aea8c9c5853c35a06da1988486abc60">ToText</link> ()</para>

<para>Safely cast to Text, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5dc13f02ae49e3fa609e426f47c8466d">ToComment</link> ()</para>

<para>Safely cast to a Comment, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a6107c3f57ab6e0755959947762953652">ToDocument</link> ()</para>

<para>Safely cast to a Document, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a12aa783a3a4445ad5557c7d56cd8dc4a">ToDeclaration</link> ()</para>

<para>Safely cast to a Declaration, or null. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * <link linkend="_classtinyxml2_1_1XMLNode_1aa8a2dd38b786c3b8d406c2047753cbfd">ToUnknown</link> ()</para>

<para>Safely cast to an Unknown, or null. </para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a717b5e8a2dd19f1375e388eb749a773c">ToElement</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a0563966a4e8df58a3bf1b323eedf839a">ToText</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae78cbef093b115895c1a7b06960396da">ToComment</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ad7e7fd167ffb01b64e3371c0d2cda19b">ToDocument</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a93ef0d07257e5c8f62dc869ef4e23b3b">ToDeclaration</link> () const</para>
</listitem>
            <listitem><para>virtual const <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ab956088fd1ec09c933804000a7a984ea">ToUnknown</link> () const</para>
</listitem>
            <listitem><para>const char * <link linkend="_classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680">Value</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a09dd68cf9eae137579f6e50f36487513">SetValue</link> (const char *val, bool staticMem=false)</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLNode_1a9b5fc636646fda761d342c72e91cb286">GetLineNum</link> () const</para>

<para>Gets the line number the node is in, if the document was parsed from a file. </para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a4d76b30d1bf4b166d3e4fa3419d51595">Parent</link> () const</para>

<para>Get the parent of this node on the DOM. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae092b35e0f94c27ad96d0ac92c038e1e">Parent</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLNode_1ac3ab489e6e202a3cd1762d3b332e89d4">NoChildren</link> () const</para>

<para>Returns true if this node has no children. </para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1abcc2e572dce329539689b426a0840661">FirstChild</link> () const</para>

<para>Get the first child node, or null if none exists. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a3cc3c85d40ce73d6f5849a35debfccfc">FirstChild</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a1bec132dcf085284e0a10755f2cf0d57">FirstChildElement</link> (const char *name=0) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a46c460e1494ccc2691f515a34e78abc0">FirstChildElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a69a29bb8263ff5e9815be180bf27e7af">LastChild</link> () const</para>

<para>Get the last child node, or null if none exists. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5029f38433f2c547ab2c67d20944563f">LastChild</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a609e02f02044f39b928d1a3e0de9f532">LastChildElement</link> (const char *name=0) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a4b3ee7343ed49c2054fe64ef5639b2ff">LastChildElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a92ee96b0d8628bc609f1d34e56d69dfa">PreviousSibling</link> () const</para>

<para>Get the previous (left) sibling node of this node. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5cbc1d7444770fb364a431441b81f21a">PreviousSibling</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9453cda5e970375a7b1b2099f8a7c40a">PreviousSiblingElement</link> (const char *name=0) const</para>

<para>Get the previous (left) sibling element of this node, with an optionally supplied name. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1abee2e91cc895adfb8ba24b0b6ec14f00">PreviousSiblingElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1af986c568061b020cf6232bec091388c0">NextSibling</link> () const</para>

<para>Get the next (right) sibling node of this node. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a05d04a9c06dc48ff8473c77774ee94eb">NextSibling</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a14ea560df31110ff07a9f566171bf797">NextSiblingElement</link> (const char *name=0) const</para>

<para>Get the next (right) sibling element of this node, with an optionally supplied name. </para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a83f054589f5a669c0dcca72bfd6bfb09">NextSiblingElement</link> (const char *name=0)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae3b422e98914d6002ca99bb1d2837103">InsertEndChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ae6ab0f078ab8edba2e2c6d1d81a3661e">LinkEndChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1ac609a8f3ea949027f439280c640bbaf2">InsertFirstChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9275138a1b8dd5d8e2c26789bdc23ac8">InsertAfterChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *afterThis, <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *addThis)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a0360085cc54df5bff85d5c5da13afdce">DeleteChildren</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a363b6edbd6ebd55f8387d2b89f2b0921">DeleteChild</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *node)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9046880c05b81ad99ee645f4b2a53ecd">ShallowClone</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *document) const =0</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a3bb369fd733f1989b751d99a9417adab">DeepClone</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *target) const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLNode_1a7ce18b751c3ea09eac292dca264f9226">ShallowEqual</link> (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *compare) const =0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785">Accept</link> (<link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> *visitor) const =0</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a002978fc889cc011d143185f2377eca2">SetUserData</link> (void *userData)</para>
</listitem>
            <listitem><para>void * <link linkend="_classtinyxml2_1_1XMLNode_1a18cc02ebd0b06f6bf5db7ef87653e00e">GetUserData</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode_1a29868df6ca383d574f584dfdd15105b6">XMLNode</link> (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> *)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLNode_1a8ae1bcd23a08ce5c5f97b2ab347b0893">~XMLNode</link> ()</para>
</listitem>
            <listitem><para>virtual char * <link linkend="_classtinyxml2_1_1XMLNode_1ac7df464d8029c9b91e96ab2499222afe">ParseDeep</link> (char *p, <link linkend="_classtinyxml2_1_1StrPair">StrPair</link> *parentEndTag, int *curLineNumPtr)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a8d2d2be0bb6797625551eb0e91f0ff62">_document</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a176dd1c4965c21c366de192164aa2c13">_parent</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1StrPair">StrPair</link> <link linkend="_classtinyxml2_1_1XMLNode_1a3ea9884098b8379de2bb5ab3fc85c0fc">_value</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLNode_1ab336ed023e15be202ff3b410be01b804">_parseLineNum</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1aa20c91e4213dc930c5bdf420322ca342">_firstChild</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a099b6560ae44ab9edb8453aaf1a3747b">_lastChild</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a9739eb0fb9a1188266052055e7a6bf6b">_prev</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a27e985496b37dd00eb5b9cf59b9e3fb1">_next</link></para>
</listitem>
            <listitem><para>void * <link linkend="_classtinyxml2_1_1XMLNode_1ac2d5cc463a6c95ec5907d57a119c56da">_userData</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a9546e242b6a4f232415befb1cfe0fdd4">Unlink</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *child)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLNode_1a0fd4d2e88fb22d46b5b1474b5b786e35">InsertChildPreamble</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *insertThis) const</para>
</listitem>
            <listitem><para>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a5b5b620d8f8a6f8e2cdc8c8ecee1c53e">ToElementWithName</link> (const char *name) const</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode_1a78be01384518a969da905548f318d75b">XMLNode</link> (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp; <link linkend="_classtinyxml2_1_1XMLNode_1a51e0d8a33c7c2fdcbdf833c99a36897b">operator=</link> (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_classtinyxml2_1_1XMLNode_1af86facb14f441c2b91f3518f106dc943">DeleteNode</link> (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> *node)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1MemPool">MemPool</link> * <link linkend="_classtinyxml2_1_1XMLNode_1a4e3ff179bc312480b6bc3e57014834f7">_memPool</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLNode_1a4eee3bda60c60a30e4e8cd4ea91c4c6e">XMLDocument</link></para>
</listitem>
            <listitem><para>class <link linkend="_classtinyxml2_1_1XMLNode_1ac2fba9b6e452829dd892f7392c24e0eb">XMLElement</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> is a base class for every object that is in the XML Document Object Model (DOM), except XMLAttributes. Nodes have siblings, a parent, and children which can be navigated. A node is always in a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>. The type of a <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> can be queried, and it can be cast to its more defined type.</para>

<para>A <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> allocates memory for all its Nodes. When the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> gets deleted, all its Nodes will also be deleted.</para>

<para><literallayout><computeroutput>A Document can contain: Element (container or leaf)
                        Comment (leaf)
                        Unknown (leaf)
                        Declaration( leaf )

An Element can contain: Element (container or leaf)
                        Text    (leaf)
                        Attributes (not on tree)
                        Comment (leaf)
                        Unknown (leaf)</computeroutput></literallayout> </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a29868df6ca383d574f584dfdd15105b6"/><section>
    <title>XMLNode()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>XMLNode</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>XMLNode</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLNode::XMLNode (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * )<computeroutput>[explicit]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a8ae1bcd23a08ce5c5f97b2ab347b0893"/><section>
    <title>~XMLNode()</title>
<indexterm><primary>~XMLNode</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>~XMLNode</secondary></indexterm>
<para><computeroutput>virtual tinyxml2::XMLNode::~XMLNode ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a78be01384518a969da905548f318d75b"/><section>
    <title>XMLNode()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>XMLNode</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>XMLNode</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLNode::XMLNode (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785"/><section>
    <title>Accept()</title>
<indexterm><primary>Accept</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>Accept</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLNode::Accept (<link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> * visitor) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Accept a hierarchical visit of the nodes in the TinyXML-2 DOM. Every node in the XML tree will be conditionally visited and the host will be called back via the <link linkend="_classtinyxml2_1_1XMLVisitor">XMLVisitor</link> interface.</para>

<para>This is essentially a SAX interface for TinyXML-2. (Note however it doesn&apos;t re-parse the XML for the callbacks, so the performance of TinyXML-2 is unchanged by using this interface versus any other.)</para>

<para>The interface has been based on ideas from:</para>

<para><itemizedlist>
<listitem>
<para><link xlink:href="http://www.saxproject.org/">http://www.saxproject.org/</link></para>
</listitem><listitem>
<para><link xlink:href="http://c2.com/cgi/wiki?HierarchicalVisitorPattern">http://c2.com/cgi/wiki?HierarchicalVisitorPattern</link></para>
</listitem></itemizedlist>
</para>

<para>Which are both good references for &quot;visiting&quot;.</para>

<para>An example of using <link linkend="_classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785">Accept()</link>: <literallayout><computeroutput>XMLPrinter printer;
tinyxmlDoc.Accept( &amp;printer );
const char* xmlcstr = printer.CStr();
</computeroutput></literallayout> </para>
<para>
Implemented in <link linkend="_classtinyxml2_1_1XMLText_1a1b2c1448f1a21299d0a7913f18b55206">tinyxml2::XMLText</link>, <link linkend="_classtinyxml2_1_1XMLComment_1a4a33dc32fae0285b03f9cfcb3e43e122">tinyxml2::XMLComment</link>, <link linkend="_classtinyxml2_1_1XMLDeclaration_1a5f376019fb34752eb248548f42f32045">tinyxml2::XMLDeclaration</link>, <link linkend="_classtinyxml2_1_1XMLUnknown_1a70983aa1b1cff3d3aa6d4d0a80e5ee48">tinyxml2::XMLUnknown</link>, <link linkend="_classtinyxml2_1_1XMLElement_1a3ea8a40e788fb9ad876c28a32932c6d5">tinyxml2::XMLElement</link>, and <link linkend="_classtinyxml2_1_1XMLDocument_1a9efa54f7ecb37c17ab1fa2b3078ccca1">tinyxml2::XMLDocument</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a3bb369fd733f1989b751d99a9417adab"/><section>
    <title>DeepClone()</title>
<indexterm><primary>DeepClone</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>DeepClone</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::DeepClone (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * target) const</computeroutput></para>
<para>Make a copy of this node and all its children.</para>

<para>If the &apos;target&apos; is null, then the nodes will be allocated in the current document. If &apos;target&apos; is specified, the memory will be allocated is the specified <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>.</para>

<para>NOTE: This is probably not the correct tool to copy a document, since XMLDocuments can have multiple top level XMLNodes. You probably want to use <link linkend="_classtinyxml2_1_1XMLDocument_1af592ffc91514e25a39664521ac83db45">XMLDocument::DeepCopy()</link> </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a363b6edbd6ebd55f8387d2b89f2b0921"/><section>
    <title>DeleteChild()</title>
<indexterm><primary>DeleteChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>DeleteChild</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::DeleteChild (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * node)</computeroutput></para>
<para>Delete a child of this node. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a0360085cc54df5bff85d5c5da13afdce"/><section>
    <title>DeleteChildren()</title>
<indexterm><primary>DeleteChildren</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>DeleteChildren</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::DeleteChildren ( )</computeroutput></para>
<para>Delete all the children of this node. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1af86facb14f441c2b91f3518f106dc943"/><section>
    <title>DeleteNode()</title>
<indexterm><primary>DeleteNode</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>DeleteNode</secondary></indexterm>
<para><computeroutput>static void tinyxml2::XMLNode::DeleteNode (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * node)<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a3cc3c85d40ce73d6f5849a35debfccfc"/><section>
    <title>FirstChild()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>FirstChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>FirstChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::FirstChild ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1abcc2e572dce329539689b426a0840661"/><section>
    <title>FirstChild()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>FirstChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>FirstChild</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::FirstChild ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the first child node, or null if none exists. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a46c460e1494ccc2691f515a34e78abc0"/><section>
    <title>FirstChildElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>FirstChildElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>FirstChildElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::FirstChildElement (const char * name = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a1bec132dcf085284e0a10755f2cf0d57"/><section>
    <title>FirstChildElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>FirstChildElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>FirstChildElement</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::FirstChildElement (const char * name = <computeroutput>0</computeroutput>
) const</computeroutput></para>
<para>Get the first child element, or optionally the first child element with the specified name. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501"/><section>
    <title>GetDocument()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetDocument</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>GetDocument</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLNode::GetDocument ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a6ce3bbe80357f5a4dc5db31a66f2bb18"/><section>
    <title>GetDocument()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetDocument</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>GetDocument</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLNode::GetDocument ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> that owns this <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9b5fc636646fda761d342c72e91cb286"/><section>
    <title>GetLineNum()</title>
<indexterm><primary>GetLineNum</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>GetLineNum</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLNode::GetLineNum ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Gets the line number the node is in, if the document was parsed from a file. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a18cc02ebd0b06f6bf5db7ef87653e00e"/><section>
    <title>GetUserData()</title>
<indexterm><primary>GetUserData</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>GetUserData</secondary></indexterm>
<para><computeroutput>void * tinyxml2::XMLNode::GetUserData ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Get user data set into the <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. TinyXML-2 in no way processes or interprets user data. It is initially 0. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9275138a1b8dd5d8e2c26789bdc23ac8"/><section>
    <title>InsertAfterChild()</title>
<indexterm><primary>InsertAfterChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>InsertAfterChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::InsertAfterChild (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * afterThis, <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * addThis)</computeroutput></para>
<para>Add a node after the specified child node. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the afterThis node is not a child of this node, or if the node does not belong to the same document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a0fd4d2e88fb22d46b5b1474b5b786e35"/><section>
    <title>InsertChildPreamble()</title>
<indexterm><primary>InsertChildPreamble</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>InsertChildPreamble</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::InsertChildPreamble (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * insertThis) const<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ae3b422e98914d6002ca99bb1d2837103"/><section>
    <title>InsertEndChild()</title>
<indexterm><primary>InsertEndChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>InsertEndChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::InsertEndChild (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * addThis)</computeroutput></para>
<para>Add a child node as the last (right) child. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the node does not belong to the same document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ac609a8f3ea949027f439280c640bbaf2"/><section>
    <title>InsertFirstChild()</title>
<indexterm><primary>InsertFirstChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>InsertFirstChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::InsertFirstChild (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * addThis)</computeroutput></para>
<para>Add a child node as the first (left) child. If the child node is already part of the document, it is moved from its old location to the new location. Returns the addThis argument or 0 if the node does not belong to the same document. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a5029f38433f2c547ab2c67d20944563f"/><section>
    <title>LastChild()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LastChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>LastChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::LastChild ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a69a29bb8263ff5e9815be180bf27e7af"/><section>
    <title>LastChild()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LastChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>LastChild</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::LastChild ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the last child node, or null if none exists. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a4b3ee7343ed49c2054fe64ef5639b2ff"/><section>
    <title>LastChildElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LastChildElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>LastChildElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::LastChildElement (const char * name = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a609e02f02044f39b928d1a3e0de9f532"/><section>
    <title>LastChildElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LastChildElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>LastChildElement</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::LastChildElement (const char * name = <computeroutput>0</computeroutput>
) const</computeroutput></para>
<para>Get the last child element or optionally the last child element with the specified name. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ae6ab0f078ab8edba2e2c6d1d81a3661e"/><section>
    <title>LinkEndChild()</title>
<indexterm><primary>LinkEndChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>LinkEndChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::LinkEndChild (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * addThis)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a05d04a9c06dc48ff8473c77774ee94eb"/><section>
    <title>NextSibling()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>NextSibling</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>NextSibling</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::NextSibling ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1af986c568061b020cf6232bec091388c0"/><section>
    <title>NextSibling()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>NextSibling</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>NextSibling</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::NextSibling ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the next (right) sibling node of this node. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a83f054589f5a669c0dcca72bfd6bfb09"/><section>
    <title>NextSiblingElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>NextSiblingElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>NextSiblingElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::NextSiblingElement (const char * name = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a14ea560df31110ff07a9f566171bf797"/><section>
    <title>NextSiblingElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>NextSiblingElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>NextSiblingElement</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::NextSiblingElement (const char * name = <computeroutput>0</computeroutput>
) const</computeroutput></para><para>

<para>Get the next (right) sibling element of this node, with an optionally supplied name. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ac3ab489e6e202a3cd1762d3b332e89d4"/><section>
    <title>NoChildren()</title>
<indexterm><primary>NoChildren</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>NoChildren</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLNode::NoChildren ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Returns true if this node has no children. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a51e0d8a33c7c2fdcbdf833c99a36897b"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp; tinyxml2::XMLNode::operator= (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ae092b35e0f94c27ad96d0ac92c038e1e"/><section>
    <title>Parent()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Parent</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>Parent</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::Parent ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a4d76b30d1bf4b166d3e4fa3419d51595"/><section>
    <title>Parent()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Parent</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>Parent</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::Parent ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the parent of this node on the DOM. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ac7df464d8029c9b91e96ab2499222afe"/><section>
    <title>ParseDeep()</title>
<indexterm><primary>ParseDeep</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ParseDeep</secondary></indexterm>
<para><computeroutput>virtual char * tinyxml2::XMLNode::ParseDeep (char * p, <link linkend="_classtinyxml2_1_1StrPair">StrPair</link> * parentEndTag, int * curLineNumPtr)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLText_1af3b93344f1183482e1683f5922ac9c68">tinyxml2::XMLText</link>, <link linkend="_classtinyxml2_1_1XMLComment_1a3430281eed8d1023bafa9e633f44f509">tinyxml2::XMLComment</link>, <link linkend="_classtinyxml2_1_1XMLDeclaration_1a42a2a36f4d78dc745063b79c16538b9b">tinyxml2::XMLDeclaration</link>, <link linkend="_classtinyxml2_1_1XMLUnknown_1aefc332cc1e6e25736f364d1e5eeb31fe">tinyxml2::XMLUnknown</link>, and <link linkend="_classtinyxml2_1_1XMLElement_1a072998100b7d0ba5e8aeac6dd6dfb31b">tinyxml2::XMLElement</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a5cbc1d7444770fb364a431441b81f21a"/><section>
    <title>PreviousSibling()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PreviousSibling</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>PreviousSibling</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::PreviousSibling ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a92ee96b0d8628bc609f1d34e56d69dfa"/><section>
    <title>PreviousSibling()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PreviousSibling</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>PreviousSibling</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::PreviousSibling ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Get the previous (left) sibling node of this node. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1abee2e91cc895adfb8ba24b0b6ec14f00"/><section>
    <title>PreviousSiblingElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>PreviousSiblingElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>PreviousSiblingElement</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::PreviousSiblingElement (const char * name = <computeroutput>0</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9453cda5e970375a7b1b2099f8a7c40a"/><section>
    <title>PreviousSiblingElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>PreviousSiblingElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>PreviousSiblingElement</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::PreviousSiblingElement (const char * name = <computeroutput>0</computeroutput>
) const</computeroutput></para><para>

<para>Get the previous (left) sibling element of this node, with an optionally supplied name. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a002978fc889cc011d143185f2377eca2"/><section>
    <title>SetUserData()</title>
<indexterm><primary>SetUserData</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>SetUserData</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::SetUserData (void * userData)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Set user data into the <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>. TinyXML-2 in no way processes or interprets user data. It is initially 0. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a09dd68cf9eae137579f6e50f36487513"/><section>
    <title>SetValue()</title>
<indexterm><primary>SetValue</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>SetValue</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::SetValue (const char * val, bool staticMem = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>Set the Value of an XML node. <formalpara><title>See also</title>

<para><link linkend="_classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680">Value()</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9046880c05b81ad99ee645f4b2a53ecd"/><section>
    <title>ShallowClone()</title>
<indexterm><primary>ShallowClone</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ShallowClone</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * tinyxml2::XMLNode::ShallowClone (<link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * document) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Make a copy of this node, but not its children. You may pass in a Document pointer that will be the owner of the new Node. If the &apos;document&apos; is null, then the node returned will be allocated from the current Document. (this-&gt;<link linkend="_classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501">GetDocument()</link>)</para>

<para>Note: if called on a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>, this will return null. </para>
<para>
Implemented in <link linkend="_classtinyxml2_1_1XMLDocument_1af4f866a4dace2120ec8cdf6f5ff79f61">tinyxml2::XMLDocument</link>, <link linkend="_classtinyxml2_1_1XMLText_1af11d2ddfacac233ba930a63afdedc672">tinyxml2::XMLText</link>, <link linkend="_classtinyxml2_1_1XMLComment_1a99082aaaa6be65df9e8957a275e7c7b0">tinyxml2::XMLComment</link>, <link linkend="_classtinyxml2_1_1XMLDeclaration_1ab9a3acf9ddf1210289742a9b1c1c513a">tinyxml2::XMLDeclaration</link>, <link linkend="_classtinyxml2_1_1XMLUnknown_1a8043c9c6e4e16555de65d7495a2d5b3e">tinyxml2::XMLUnknown</link>, and <link linkend="_classtinyxml2_1_1XMLElement_1a1edb4f3b8e2622e65663b068bc907122">tinyxml2::XMLElement</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a7ce18b751c3ea09eac292dca264f9226"/><section>
    <title>ShallowEqual()</title>
<indexterm><primary>ShallowEqual</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ShallowEqual</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLNode::ShallowEqual (const <link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * compare) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para>
<para>Test if 2 nodes are the same, but don&apos;t test children. The 2 nodes do not need to be in the same Document.</para>

<para>Note: if called on a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>, this will return false. </para>
<para>
Implemented in <link linkend="_classtinyxml2_1_1XMLDocument_1a6fe5ef18699091844fcf64b56ffa5bf9">tinyxml2::XMLDocument</link>, <link linkend="_classtinyxml2_1_1XMLText_1ae0fff8a24e2de7eb073fd192e9db0331">tinyxml2::XMLText</link>, <link linkend="_classtinyxml2_1_1XMLComment_1a6f7d227b25afa8cc3c763b7cc8833739">tinyxml2::XMLComment</link>, <link linkend="_classtinyxml2_1_1XMLDeclaration_1aa26b70011694e9b9e9480b929e9b78d6">tinyxml2::XMLDeclaration</link>, <link linkend="_classtinyxml2_1_1XMLUnknown_1a0715ab2c05d7f74845c188122213b116">tinyxml2::XMLUnknown</link>, and <link linkend="_classtinyxml2_1_1XMLElement_1ad9ea913a460b48979bd83cf9871c99f6">tinyxml2::XMLElement</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a5dc13f02ae49e3fa609e426f47c8466d"/><section>
    <title>ToComment()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToComment</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToComment</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * tinyxml2::XMLNode::ToComment ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to a Comment, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLComment_1a5aa77d6d2499f6b81074ae0d20336c7e">tinyxml2::XMLComment</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ae78cbef093b115895c1a7b06960396da"/><section>
    <title>ToComment()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToComment</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToComment</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> * tinyxml2::XMLNode::ToComment ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLComment_1af7758ae36942155377db720f19e0feaa">tinyxml2::XMLComment</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a12aa783a3a4445ad5557c7d56cd8dc4a"/><section>
    <title>ToDeclaration()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToDeclaration</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToDeclaration</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * tinyxml2::XMLNode::ToDeclaration ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to a Declaration, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLDeclaration_1aa24eb89ab36119e0b18ee06c82ff6c24">tinyxml2::XMLDeclaration</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a93ef0d07257e5c8f62dc869ef4e23b3b"/><section>
    <title>ToDeclaration()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToDeclaration</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToDeclaration</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> * tinyxml2::XMLNode::ToDeclaration ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLDeclaration_1a74e324fe0195ed20d7c2cc33adc0728c">tinyxml2::XMLDeclaration</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a6107c3f57ab6e0755959947762953652"/><section>
    <title>ToDocument()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToDocument</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToDocument</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLNode::ToDocument ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to a Document, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLDocument_1a88dfd725068a410aed08f55b825f6907">tinyxml2::XMLDocument</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ad7e7fd167ffb01b64e3371c0d2cda19b"/><section>
    <title>ToDocument()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToDocument</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToDocument</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> * tinyxml2::XMLNode::ToDocument ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLDocument_1acce8c783cd98e98f0560aa6fb7b96034">tinyxml2::XMLDocument</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9417e1f8a9787ae27741605493514b18"/><section>
    <title>ToElement()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToElement</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::ToElement ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to an Element, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLElement_1abade4c59bd6f16c85caa42d3c9eb617d">tinyxml2::XMLElement</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a717b5e8a2dd19f1375e388eb749a773c"/><section>
    <title>ToElement()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToElement</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::ToElement ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLElement_1a97ac0e6fd96705fd151481a8f5f67c56">tinyxml2::XMLElement</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a5b5b620d8f8a6f8e2cdc8c8ecee1c53e"/><section>
    <title>ToElementWithName()</title>
<indexterm><primary>ToElementWithName</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToElementWithName</secondary></indexterm>
<para><computeroutput>const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> * tinyxml2::XMLNode::ToElementWithName (const char * name) const<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a0aea8c9c5853c35a06da1988486abc60"/><section>
    <title>ToText()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToText</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToText</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * tinyxml2::XMLNode::ToText ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to Text, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLText_1aa5f022b8424f270302ff281c0b9c360b">tinyxml2::XMLText</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a0563966a4e8df58a3bf1b323eedf839a"/><section>
    <title>ToText()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToText</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToText</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> * tinyxml2::XMLNode::ToText ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLText_1a479fb4d019766a8e7f9f157afb8084b3">tinyxml2::XMLText</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1aa8a2dd38b786c3b8d406c2047753cbfd"/><section>
    <title>ToUnknown()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ToUnknown</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToUnknown</secondary></indexterm>
<para><computeroutput>virtual <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * tinyxml2::XMLNode::ToUnknown ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Safely cast to an Unknown, or null. </para>
</para>
<para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLUnknown_1a7724b3762750762aa7582322f7047086">tinyxml2::XMLUnknown</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ab956088fd1ec09c933804000a7a984ea"/><section>
    <title>ToUnknown()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ToUnknown</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>ToUnknown</secondary></indexterm>
<para><computeroutput>virtual const <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> * tinyxml2::XMLNode::ToUnknown ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented in <link linkend="_classtinyxml2_1_1XMLUnknown_1ac165efcc34d2ddc0005bb23efa02249c">tinyxml2::XMLUnknown</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9546e242b6a4f232415befb1cfe0fdd4"/><section>
    <title>Unlink()</title>
<indexterm><primary>Unlink</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>Unlink</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLNode::Unlink (<link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link> * child)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680"/><section>
    <title>Value()</title>
<indexterm><primary>Value</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>Value</secondary></indexterm>
<para><computeroutput>const char * tinyxml2::XMLNode::Value ( ) const</computeroutput></para>
<para>The meaning of &apos;value&apos; changes for the specific type. <literallayout><computeroutput>Document:   empty (NULL is returned, not an empty string)
Element:    name of the element
Comment:    the comment text
Unknown:    the tag contents
Text:       the text string
</computeroutput></literallayout> </para>
</section>
</section>
<section>
<title>Friends And Related Symbol Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a4eee3bda60c60a30e4e8cd4ea91c4c6e"/><section>
    <title>XMLDocument</title>
<indexterm><primary>XMLDocument</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>XMLDocument</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ac2fba9b6e452829dd892f7392c24e0eb"/><section>
    <title>XMLElement</title>
<indexterm><primary>XMLElement</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>XMLElement</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a8d2d2be0bb6797625551eb0e91f0ff62"/><section>
    <title>_document</title>
<indexterm><primary>_document</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_document</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>* tinyxml2::XMLNode::_document<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1aa20c91e4213dc930c5bdf420322ca342"/><section>
    <title>_firstChild</title>
<indexterm><primary>_firstChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_firstChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>* tinyxml2::XMLNode::_firstChild<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a099b6560ae44ab9edb8453aaf1a3747b"/><section>
    <title>_lastChild</title>
<indexterm><primary>_lastChild</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_lastChild</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>* tinyxml2::XMLNode::_lastChild<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a4e3ff179bc312480b6bc3e57014834f7"/><section>
    <title>_memPool</title>
<indexterm><primary>_memPool</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_memPool</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1MemPool">MemPool</link>* tinyxml2::XMLNode::_memPool<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a27e985496b37dd00eb5b9cf59b9e3fb1"/><section>
    <title>_next</title>
<indexterm><primary>_next</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_next</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>* tinyxml2::XMLNode::_next<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a176dd1c4965c21c366de192164aa2c13"/><section>
    <title>_parent</title>
<indexterm><primary>_parent</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_parent</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>* tinyxml2::XMLNode::_parent<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ab336ed023e15be202ff3b410be01b804"/><section>
    <title>_parseLineNum</title>
<indexterm><primary>_parseLineNum</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_parseLineNum</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLNode::_parseLineNum<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a9739eb0fb9a1188266052055e7a6bf6b"/><section>
    <title>_prev</title>
<indexterm><primary>_prev</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_prev</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLNode">XMLNode</link>* tinyxml2::XMLNode::_prev<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1ac2d5cc463a6c95ec5907d57a119c56da"/><section>
    <title>_userData</title>
<indexterm><primary>_userData</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_userData</secondary></indexterm>
<para><computeroutput>void* tinyxml2::XMLNode::_userData<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLNode_1a3ea9884098b8379de2bb5ab3fc85c0fc"/><section>
    <title>_value</title>
<indexterm><primary>_value</primary><secondary>tinyxml2::XMLNode</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLNode</primary><secondary>_value</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1StrPair">StrPair</link> tinyxml2::XMLNode::_value<computeroutput>[mutable]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
include/<link linkend="_tinyxml2_8h">tinyxml2.h</link></section>
</section>
