<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classGame" kind="class" language="C++" prot="public">
    <compoundname>Game</compoundname>
    <includes refid="Game_8h" local="no">Game.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGame_1acd2b096faadc418700fc67ce839eaa5e" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String Game::gameStatus</definition>
        <argsstring></argsstring>
        <name>gameStatus</name>
        <qualifiedname>Game::gameStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The status of the game (e.g., &quot;IN_PROGRES&quot;, &quot;PLAYER1_WIN&quot;). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="24" column="12" bodyfile="include/game/Game.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="classGame_1a7b3f0f0b004dda8d7907c52e0184d718" compoundref="Game_8h" startline="87" endline="87">getGameStatus</referencedby>
        <referencedby refid="classGame_1af730540262edbb927ad39e2eb51d25ab" compoundref="Game_8h" startline="93" endline="93">setGameStatus</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_1afbb87c0f34b073fd8fe9deba3fdffc83" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String Game::firstPlayer</definition>
        <argsstring></argsstring>
        <name>firstPlayer</name>
        <qualifiedname>Game::firstPlayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the first player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="25" column="12" bodyfile="include/game/Game.h" bodystart="25" bodyend="-1"/>
        <referencedby refid="classGame_1abb18cb83bdb5b1e24001901add328e16" compoundref="Game_8h" startline="107" endline="107">getFirstPlayer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a6d1e144f691962294b084d7605356630" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String Game::secondPlayer</definition>
        <argsstring></argsstring>
        <name>secondPlayer</name>
        <qualifiedname>Game::secondPlayer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the second player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="26" column="12" bodyfile="include/game/Game.h" bodystart="26" bodyend="-1"/>
        <referencedby refid="classGame_1a9cf29e6a05f4d49fb8ae25cee7411556" compoundref="Game_8h" startline="114" endline="114">getSecondPlayer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_1add991eb9652696444b437dd48eea51d9" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte Game::nextMove</definition>
        <argsstring></argsstring>
        <name>nextMove</name>
        <qualifiedname>Game::nextMove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The identifier of the player whose turn is next (1 or 2). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="27" column="10" bodyfile="include/game/Game.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="classGame_1a5a273ef95d4bbf74a45c8334b04c5748" compoundref="Game_8h" startline="121" endline="121">getNextMove</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_1a089cd41684bef602a97c15f0981a256f" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String Game::aiType</definition>
        <argsstring></argsstring>
        <name>aiType</name>
        <qualifiedname>Game::aiType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of AI player, if applicable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="28" column="12" bodyfile="include/game/Game.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classGame_1ab07d047e6bb3c9c3e06c0e45ef873668" compoundref="Game_8h" startline="100" endline="100">getAIType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_1ae38e501e177586af48d2e2300b6be4ba" prot="private" static="no" mutable="no">
        <type><ref refid="classBoard" kindref="compound">Board</ref> *</type>
        <definition>Board* Game::board</definition>
        <argsstring></argsstring>
        <name>board</name>
        <qualifiedname>Game::board</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the game board. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="29" column="11" bodyfile="include/game/Game.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classGame_1aac82d38c4540fcfaef89059865d1ce31" compoundref="Game_8h" startline="128" endline="128">getBoard</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGame_1af05ac5bb1ca046db7a9cc3d7d264c89c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGame" kindref="compound">Game</ref> *</type>
        <definition>static Game * Game::newGame</definition>
        <argsstring>(String firstPlayer, String secondPlayer, String aiType)</argsstring>
        <name>newGame</name>
        <qualifiedname>Game::newGame</qualifiedname>
        <param>
          <type>String</type>
          <declname>firstPlayer</declname>
        </param>
        <param>
          <type>String</type>
          <declname>secondPlayer</declname>
        </param>
        <param>
          <type>String</type>
          <declname>aiType</declname>
        </param>
        <briefdescription>
<para>Factory method to create a new <ref refid="classGame" kindref="compound">Game</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>firstPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the first player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the second player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aiType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of AI player, if applicable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the new <ref refid="classGame" kindref="compound">Game</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="41" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGame_1acb85e6adbb0fe80811507f18a5d029ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::Game</definition>
        <argsstring>(String gameStatus, String firstPlayer, String secondPlayer, byte nextMove, String aiType)</argsstring>
        <name>Game</name>
        <qualifiedname>Game::Game</qualifiedname>
        <param>
          <type>String</type>
          <declname>gameStatus</declname>
        </param>
        <param>
          <type>String</type>
          <declname>firstPlayer</declname>
        </param>
        <param>
          <type>String</type>
          <declname>secondPlayer</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>nextMove</declname>
        </param>
        <param>
          <type>String</type>
          <declname>aiType</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classGame" kindref="compound">Game</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a game with standart <ref refid="classBoard" kindref="compound">Board</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gameStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial status of the game. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the first player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the second player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextMove</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the player whose turn is next (1 or 2). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aiType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of AI player, if applicable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a5b906f060f2100223f6961ad842a86f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::Game</definition>
        <argsstring>(String gameStatus, String firstPlayer, String secondPlayer, byte nextMove, String aiType, Board *board)</argsstring>
        <name>Game</name>
        <qualifiedname>Game::Game</qualifiedname>
        <param>
          <type>String</type>
          <declname>gameStatus</declname>
        </param>
        <param>
          <type>String</type>
          <declname>firstPlayer</declname>
        </param>
        <param>
          <type>String</type>
          <declname>secondPlayer</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>nextMove</declname>
        </param>
        <param>
          <type>String</type>
          <declname>aiType</declname>
        </param>
        <param>
          <type><ref refid="classBoard" kindref="compound">Board</ref> *</type>
          <declname>board</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classGame" kindref="compound">Game</ref> class with an existing game board. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gameStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial status of the game. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the first player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the second player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nextMove</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the player whose turn is next (1 or 2). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aiType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of AI player, if applicable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>board</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an existing game board. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1ad0fe77703efd5a6322081b2c74407a69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::changeNextPlayer</definition>
        <argsstring>()</argsstring>
        <name>changeNextPlayer</name>
        <qualifiedname>Game::changeNextPlayer</qualifiedname>
        <briefdescription>
<para>Changes the player whose turn is next. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="80" column="10" bodyfile="include/game/Game.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classGame_1a7b3f0f0b004dda8d7907c52e0184d718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String Game::getGameStatus</definition>
        <argsstring>()</argsstring>
        <name>getGameStatus</name>
        <qualifiedname>Game::getGameStatus</qualifiedname>
        <briefdescription>
<para>Gets the current game status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current game status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="87" column="12" bodyfile="include/game/Game.h" bodystart="87" bodyend="87"/>
        <references refid="classGame_1acd2b096faadc418700fc67ce839eaa5e" compoundref="Game_8h" startline="24">gameStatus</references>
      </memberdef>
      <memberdef kind="function" id="classGame_1af730540262edbb927ad39e2eb51d25ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Game::setGameStatus</definition>
        <argsstring>(String gameStatus)</argsstring>
        <name>setGameStatus</name>
        <qualifiedname>Game::setGameStatus</qualifiedname>
        <param>
          <type>String</type>
          <declname>gameStatus</declname>
        </param>
        <briefdescription>
<para>Sets the game status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gameStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>The new game status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="93" column="10" bodyfile="include/game/Game.h" bodystart="93" bodyend="93"/>
        <references refid="classGame_1acd2b096faadc418700fc67ce839eaa5e" compoundref="Game_8h" startline="24">gameStatus</references>
      </memberdef>
      <memberdef kind="function" id="classGame_1ab07d047e6bb3c9c3e06c0e45ef873668" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String Game::getAIType</definition>
        <argsstring>()</argsstring>
        <name>getAIType</name>
        <qualifiedname>Game::getAIType</qualifiedname>
        <briefdescription>
<para>Gets the type of AI player, if applicable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of AI player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="100" column="12" bodyfile="include/game/Game.h" bodystart="100" bodyend="100"/>
        <references refid="classGame_1a089cd41684bef602a97c15f0981a256f" compoundref="Game_8h" startline="28">aiType</references>
      </memberdef>
      <memberdef kind="function" id="classGame_1abb18cb83bdb5b1e24001901add328e16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String Game::getFirstPlayer</definition>
        <argsstring>()</argsstring>
        <name>getFirstPlayer</name>
        <qualifiedname>Game::getFirstPlayer</qualifiedname>
        <briefdescription>
<para>Gets the type of the first player. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of the first player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="107" column="12" bodyfile="include/game/Game.h" bodystart="107" bodyend="107"/>
        <references refid="classGame_1afbb87c0f34b073fd8fe9deba3fdffc83" compoundref="Game_8h" startline="25">firstPlayer</references>
        <referencedby refid="classGameProcessor_1ae281b585e533039255af373913b1df2e" compoundref="GameProcessor_8h" startline="152" endline="155">GameProcessor::isAIMove</referencedby>
        <referencedby refid="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" compoundref="GameProcessor_8h" startline="141" endline="144">GameProcessor::isMANMove</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGame_1a9cf29e6a05f4d49fb8ae25cee7411556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String Game::getSecondPlayer</definition>
        <argsstring>()</argsstring>
        <name>getSecondPlayer</name>
        <qualifiedname>Game::getSecondPlayer</qualifiedname>
        <briefdescription>
<para>Gets the type of the second player. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of the second player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="114" column="12" bodyfile="include/game/Game.h" bodystart="114" bodyend="114"/>
        <references refid="classGame_1a6d1e144f691962294b084d7605356630" compoundref="Game_8h" startline="26">secondPlayer</references>
        <referencedby refid="classGameProcessor_1ae281b585e533039255af373913b1df2e" compoundref="GameProcessor_8h" startline="152" endline="155">GameProcessor::isAIMove</referencedby>
        <referencedby refid="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" compoundref="GameProcessor_8h" startline="141" endline="144">GameProcessor::isMANMove</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGame_1a5a273ef95d4bbf74a45c8334b04c5748" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte Game::getNextMove</definition>
        <argsstring>()</argsstring>
        <name>getNextMove</name>
        <qualifiedname>Game::getNextMove</qualifiedname>
        <briefdescription>
<para>Gets the identifier of the player whose turn is next. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The identifier of the player whose turn is next (1 or 2). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="121" column="10" bodyfile="include/game/Game.h" bodystart="121" bodyend="121"/>
        <references refid="classGame_1add991eb9652696444b437dd48eea51d9" compoundref="Game_8h" startline="27">nextMove</references>
        <referencedby refid="classGameProcessor_1ae281b585e533039255af373913b1df2e" compoundref="GameProcessor_8h" startline="152" endline="155">GameProcessor::isAIMove</referencedby>
        <referencedby refid="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" compoundref="GameProcessor_8h" startline="141" endline="144">GameProcessor::isMANMove</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGame_1aac82d38c4540fcfaef89059865d1ce31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classBoard" kindref="compound">Board</ref> *</type>
        <definition>Board * Game::getBoard</definition>
        <argsstring>()</argsstring>
        <name>getBoard</name>
        <qualifiedname>Game::getBoard</qualifiedname>
        <briefdescription>
<para>Gets a pointer to the game board. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the game board. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="128" column="11" bodyfile="include/game/Game.h" bodystart="128" bodyend="128"/>
        <references refid="classGame_1ae38e501e177586af48d2e2300b6be4ba" compoundref="Game_8h" startline="29">board</references>
      </memberdef>
      <memberdef kind="function" id="classGame_1ae3d112ca6e0e55150d2fdbc704474530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game::~Game</definition>
        <argsstring>()</argsstring>
        <name>~Game</name>
        <qualifiedname>Game::~Game</qualifiedname>
        <briefdescription>
<para>Destructor for the <ref refid="classGame" kindref="compound">Game</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/Game.h" line="133" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a game with players, status, and a game board. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Board</label>
        <link refid="classBoard"/>
      </node>
      <node id="1">
        <label>Game</label>
        <link refid="classGame"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-board</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/game/Game.h" line="21" column="1" bodyfile="include/game/Game.h" bodystart="22" bodyend="134"/>
    <listofallmembers>
      <member refid="classGame_1a089cd41684bef602a97c15f0981a256f" prot="private" virt="non-virtual"><scope>Game</scope><name>aiType</name></member>
      <member refid="classGame_1ae38e501e177586af48d2e2300b6be4ba" prot="private" virt="non-virtual"><scope>Game</scope><name>board</name></member>
      <member refid="classGame_1ad0fe77703efd5a6322081b2c74407a69" prot="public" virt="non-virtual"><scope>Game</scope><name>changeNextPlayer</name></member>
      <member refid="classGame_1afbb87c0f34b073fd8fe9deba3fdffc83" prot="private" virt="non-virtual"><scope>Game</scope><name>firstPlayer</name></member>
      <member refid="classGame_1acb85e6adbb0fe80811507f18a5d029ec" prot="public" virt="non-virtual"><scope>Game</scope><name>Game</name></member>
      <member refid="classGame_1a5b906f060f2100223f6961ad842a86f9" prot="public" virt="non-virtual"><scope>Game</scope><name>Game</name></member>
      <member refid="classGame_1acd2b096faadc418700fc67ce839eaa5e" prot="private" virt="non-virtual"><scope>Game</scope><name>gameStatus</name></member>
      <member refid="classGame_1ab07d047e6bb3c9c3e06c0e45ef873668" prot="public" virt="non-virtual"><scope>Game</scope><name>getAIType</name></member>
      <member refid="classGame_1aac82d38c4540fcfaef89059865d1ce31" prot="public" virt="non-virtual"><scope>Game</scope><name>getBoard</name></member>
      <member refid="classGame_1abb18cb83bdb5b1e24001901add328e16" prot="public" virt="non-virtual"><scope>Game</scope><name>getFirstPlayer</name></member>
      <member refid="classGame_1a7b3f0f0b004dda8d7907c52e0184d718" prot="public" virt="non-virtual"><scope>Game</scope><name>getGameStatus</name></member>
      <member refid="classGame_1a5a273ef95d4bbf74a45c8334b04c5748" prot="public" virt="non-virtual"><scope>Game</scope><name>getNextMove</name></member>
      <member refid="classGame_1a9cf29e6a05f4d49fb8ae25cee7411556" prot="public" virt="non-virtual"><scope>Game</scope><name>getSecondPlayer</name></member>
      <member refid="classGame_1af05ac5bb1ca046db7a9cc3d7d264c89c" prot="public" virt="non-virtual"><scope>Game</scope><name>newGame</name></member>
      <member refid="classGame_1add991eb9652696444b437dd48eea51d9" prot="private" virt="non-virtual"><scope>Game</scope><name>nextMove</name></member>
      <member refid="classGame_1a6d1e144f691962294b084d7605356630" prot="private" virt="non-virtual"><scope>Game</scope><name>secondPlayer</name></member>
      <member refid="classGame_1af730540262edbb927ad39e2eb51d25ab" prot="public" virt="non-virtual"><scope>Game</scope><name>setGameStatus</name></member>
      <member refid="classGame_1ae3d112ca6e0e55150d2fdbc704474530" prot="public" virt="non-virtual"><scope>Game</scope><name>~Game</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
