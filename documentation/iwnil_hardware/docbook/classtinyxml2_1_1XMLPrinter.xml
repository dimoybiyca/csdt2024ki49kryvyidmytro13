<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtinyxml2_1_1XMLPrinter" xml:lang="en-US">
<title>tinyxml2::XMLPrinter Class Reference</title>
<indexterm><primary>tinyxml2::XMLPrinter</primary></indexterm>
<para>
<computeroutput>#include &lt;tinyxml2.h&gt;</computeroutput>
</para>
Inheritance diagram for tinyxml2::XMLPrinter:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLPrinter__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for tinyxml2::XMLPrinter:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLPrinter__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLPrinter_1aa6d3841c069085f5b8a27bc7103c04f7">XMLPrinter</link> (FILE *file=0, bool compact=false, int depth=0)</para>
</listitem>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLPrinter_1af4caefa48ea6436898fb1807de8d14c0">~XMLPrinter</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a178c608ce8476043d5d6513819cde903">PushHeader</link> (bool writeBOM, bool writeDeclaration)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a20fb06c83bd13e5140d7dd13af06c010">OpenElement</link> (const char *name, bool compactMode=false)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a9a4e2c9348b42e147629d5a99f4af3f0">PushAttribute</link> (const char *name, const char *value)</para>

<para>If streaming, add an attribute to an open element. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a69120c82088597372d28d0a98f2ee7a1">PushAttribute</link> (const char *name, int value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1aa41039e51990aaf5342f3e0575a692c4">PushAttribute</link> (const char *name, unsigned value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a9bc2fe21a83a70e6aa0415f2034ecbff">PushAttribute</link> (const char *name, int64_t value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a0cfb03811df0873faa59a12de009bf33">PushAttribute</link> (const char *name, uint64_t value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a51f7950d7b7a19f0d3a0d549a318d45f">PushAttribute</link> (const char *name, bool value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a1714867af40e68ca404c3e84b6cac2a6">PushAttribute</link> (const char *name, double value)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classtinyxml2_1_1XMLPrinter_1ad04d29562b46fcdb23ab320f8b664240">CloseElement</link> (bool compactMode=false)</para>

<para>If streaming, close the Element. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a1cc16a9362df4332012cb13cff6441b3">PushText</link> (const char *text, bool cdata=false)</para>

<para>Add a text node. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a3e0d4d78de25d4cf081009e1431cea7e">PushText</link> (int value)</para>

<para>Add a text node from an integer. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a661fb50e7e0a4918d2d259cb0fae647e">PushText</link> (unsigned value)</para>

<para>Add a text node from an unsigned. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a96b0a0bfe105154a0a6c37d725258f0a">PushText</link> (int64_t value)</para>

<para>Add a text node from a signed 64bit integer. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a60b0a4cf57371ff8679c2c7556ccb708">PushText</link> (uint64_t value)</para>

<para>Add a text node from an unsigned 64bit integer. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a4390e5fa1ed05189a8686647345ab29f">PushText</link> (bool value)</para>

<para>Add a text node from a bool. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a1dbb1390e829d0673af66b9cd1928bd7">PushText</link> (float value)</para>

<para>Add a text node from a float. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1aa715302dfc09473c77c853cbd5431965">PushText</link> (double value)</para>

<para>Add a text node from a double. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1afc8416814219591c2fd5656e0c233140">PushComment</link> (const char *comment)</para>

<para>Add a comment. </para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a2fe3565e262594efc6c0276723c83fe7">PushDeclaration</link> (const char *value)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1ab1efc6d1548505e9984185f58f54b713">PushUnknown</link> (const char *value)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1ae966b988a7a28c41e91c5ca17fb2054b">VisitEnter</link> (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp;)</para>

<para>Visit a document. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a15fc1f2b922f540917dcf52808737b29">VisitExit</link> (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp;)</para>

<para>Visit a document. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a2ce2aa508c21ac91615093ddb9c282c5">VisitEnter</link> (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp;element, const <link linkend="_classtinyxml2_1_1XMLAttribute">XMLAttribute</link> *attribute)</para>

<para>Visit an element. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1ae99e0a7086543591edfb565f24689098">VisitExit</link> (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp;element)</para>

<para>Visit an element. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a275ae25544a12199ae40b6994ca6e4de">Visit</link> (const <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> &amp;text)</para>

<para>Visit a text node. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a3f16a30be1537ac141d9bd2db824ba9e">Visit</link> (const <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> &amp;comment)</para>

<para>Visit a comment node. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a9ceff5cd85e5db65838962174fcdcc46">Visit</link> (const <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> &amp;declaration)</para>

<para>Visit a declaration. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1aa15e1da81e17dea5da6499ac5b08d9d8">Visit</link> (const <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> &amp;unknown)</para>

<para>Visit an unknown node. </para>
</listitem>
            <listitem><para>const char * <link linkend="_classtinyxml2_1_1XMLPrinter_1abfa772366c44a17cdeb8aea294d57f78">CStr</link> () const</para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLPrinter_1a3256cf3523d4898b91abb18b924be04c">CStrSize</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a690cb140ba98b7339734ff865f56b0b3">ClearBuffer</link> (bool resetToFirstElement=true)</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classtinyxml2_1_1XMLVisitor">tinyxml2::XMLVisitor</link>        <itemizedlist>
            <listitem><para>virtual <link linkend="_classtinyxml2_1_1XMLVisitor_1a494e72033d646c47d9c65c502ec62364">~XMLVisitor</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a38e1ed5a779bdf63eda9e808f7a6de66">CompactMode</link> (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp;)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classtinyxml2_1_1XMLPrinter_1a01148e2ebe6776e38c5a3e41bc5feb74">PrintSpace</link> (int depth)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classtinyxml2_1_1XMLPrinter_1a4fefcc4003e88f63e0dfd9f77c386078">Print</link> (const char *format,...)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classtinyxml2_1_1XMLPrinter_1a65824af90e503b850f076725ccc95cfc">Write</link> (const char *data, size_t size)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_classtinyxml2_1_1XMLPrinter_1a03de437ca25fbcc0d7df4bc29296e7f4">Putc</link> (char ch)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a4bd7f0cabca77ac95c299103fa9592f1">Write</link> (const char *data)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1ac6e2c72c5d796f5b4de6ce81ca95e3fa">SealElementIfJustOpened</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1ac07169d58b465214a2b1fa306e617c26">_elementJustOpened</link></para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt; const char *, 10 &gt; <link linkend="_classtinyxml2_1_1XMLPrinter_1a613c11fefb95fa4ac484d76c39309cee">_stack</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Types    </title>
        <itemizedlist>
            <listitem><para>enum { <link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5">ENTITY_RANGE</link> = 64
, <link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a1f747a8fb39ceb2e711c3798058fb632">BUF_SIZE</link> = 200
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a83f100894c0ed069ffbd2c5a2c9ed190">PrepareForNewNode</link> (bool compactMode)</para>
</listitem>
            <listitem><para>void <link linkend="_classtinyxml2_1_1XMLPrinter_1a5495e504053f63f2c4d603327314fa91">PrintString</link> (const char *, bool restrictedEntitySet)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLPrinter_1a157706836c056febc4022dc540a47982">XMLPrinter</link> (const <link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp;)</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp; <link linkend="_classtinyxml2_1_1XMLPrinter_1ad4da41082cbb268042b05b34fde40a6d">operator=</link> (const <link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1abbd7ac45d97ae5eceec12d6c058119f9">_firstElement</link></para>
</listitem>
            <listitem><para>FILE * <link linkend="_classtinyxml2_1_1XMLPrinter_1a79d91decf17990f7ce18b592f3fdf44e">_fp</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLPrinter_1a19cd59a9dbe4b666264803fb91ac8ec1">_depth</link></para>
</listitem>
            <listitem><para>int <link linkend="_classtinyxml2_1_1XMLPrinter_1a3c5a442e57131faefde97188e92144f3">_textDepth</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a3e27c4b4fe791a96e4e139b5034e190b">_processEntities</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a7bc067aa3f0dcee68e4ac75e19117bd0">_compactMode</link></para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a334eb34c43f21daebef9341b4768c275">_entityFlag</link> [<link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5">ENTITY_RANGE</link>]</para>
</listitem>
            <listitem><para>bool <link linkend="_classtinyxml2_1_1XMLPrinter_1a5df242509d42ae1c9128924121ebe093">_restrictedEntityFlag</link> [<link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5">ENTITY_RANGE</link>]</para>
</listitem>
            <listitem><para><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt; char, 20 &gt; <link linkend="_classtinyxml2_1_1XMLPrinter_1a55a5cf6d1835248eb2fce3bcbcc3410a">_buffer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Printing functionality. The <link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> gives you more options than the <link linkend="_classtinyxml2_1_1XMLDocument_1a867cf5fa3e3ff6ae4847a8b7ee8ec083">XMLDocument::Print()</link> method.</para>

<para>It can:<orderedlist>
<listitem>
<para>Print to memory.</para>
</listitem><listitem>
<para>Print to a file you provide.</para>
</listitem><listitem>
<para>Print XML without a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link>.</para>
</listitem></orderedlist>
</para>

<para>Print to Memory</para>

<para><literallayout><computeroutput>XMLPrinter printer;
doc.Print( &amp;printer );
SomeFunction( printer.CStr() );
</computeroutput></literallayout></para>

<para>Print to a File</para>

<para>You provide the file pointer. <literallayout><computeroutput>XMLPrinter printer( fp );
doc.Print( &amp;printer );
</computeroutput></literallayout></para>

<para>Print without a <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link></para>

<para>When loading, an XML parser is very useful. However, sometimes when saving, it just gets in the way. The code is often set up for streaming, and constructing the DOM is just overhead.</para>

<para>The Printer supports the streaming case. The following code prints out a trivially simple XML file without ever creating an XML document.</para>

<para><literallayout><computeroutput>XMLPrinter printer( fp );
printer.OpenElement( &quot;foo&quot; );
printer.PushAttribute( &quot;foo&quot;, &quot;bar&quot; );
printer.CloseElement();
</computeroutput></literallayout> </para>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430"/><section>
    <title>anonymous enum</title>
<para><computeroutput>anonymous enum<computeroutput>[private]</computeroutput></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>ENTITY_RANGE</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>ENTITY_RANGE</secondary></indexterm>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5"/>ENTITY_RANGE</entry><entry></entry></row><row><entry><indexterm><primary>BUF_SIZE</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>BUF_SIZE</secondary></indexterm>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a1f747a8fb39ceb2e711c3798058fb632"/>BUF_SIZE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1aa6d3841c069085f5b8a27bc7103c04f7"/><section>
    <title>XMLPrinter()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>XMLPrinter</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>XMLPrinter</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLPrinter::XMLPrinter (FILE * file = <computeroutput>0</computeroutput>
, bool compact = <computeroutput>false</computeroutput>
, int depth = <computeroutput>0</computeroutput>
)</computeroutput></para>
<para>Construct the printer. If the FILE* is specified, this will print to the FILE. Else it will print to memory, and the result is available in <link linkend="_classtinyxml2_1_1XMLPrinter_1abfa772366c44a17cdeb8aea294d57f78">CStr()</link>. If &apos;compact&apos; is set to true, then output is created with only required whitespace and newlines. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1af4caefa48ea6436898fb1807de8d14c0"/><section>
    <title>~XMLPrinter()</title>
<indexterm><primary>~XMLPrinter</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>~XMLPrinter</secondary></indexterm>
<para><computeroutput>virtual tinyxml2::XMLPrinter::~XMLPrinter ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a157706836c056febc4022dc540a47982"/><section>
    <title>XMLPrinter()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>XMLPrinter</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>XMLPrinter</secondary></indexterm>
<para><computeroutput>tinyxml2::XMLPrinter::XMLPrinter (const <link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a690cb140ba98b7339734ff865f56b0b3"/><section>
    <title>ClearBuffer()</title>
<indexterm><primary>ClearBuffer</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>ClearBuffer</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::ClearBuffer (bool resetToFirstElement = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>If in print to memory mode, reset the buffer to the beginning. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ad04d29562b46fcdb23ab320f8b664240"/><section>
    <title>CloseElement()</title>
<indexterm><primary>CloseElement</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>CloseElement</secondary></indexterm>
<para><computeroutput>virtual void tinyxml2::XMLPrinter::CloseElement (bool compactMode = <computeroutput>false</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>If streaming, close the Element. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a38e1ed5a779bdf63eda9e808f7a6de66"/><section>
    <title>CompactMode()</title>
<indexterm><primary>CompactMode</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>CompactMode</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::CompactMode (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp; )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1abfa772366c44a17cdeb8aea294d57f78"/><section>
    <title>CStr()</title>
<indexterm><primary>CStr</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>CStr</secondary></indexterm>
<para><computeroutput>const char * tinyxml2::XMLPrinter::CStr ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>If in print to memory mode, return a pointer to the XML file in memory. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a3256cf3523d4898b91abb18b924be04c"/><section>
    <title>CStrSize()</title>
<indexterm><primary>CStrSize</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>CStrSize</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLPrinter::CStrSize ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>If in print to memory mode, return the size of the XML file in memory. (Note the size returned includes the terminating null.) </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a20fb06c83bd13e5140d7dd13af06c010"/><section>
    <title>OpenElement()</title>
<indexterm><primary>OpenElement</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>OpenElement</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::OpenElement (const char * name, bool compactMode = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>If streaming, start writing an element. The element must be closed with <link linkend="_classtinyxml2_1_1XMLPrinter_1ad04d29562b46fcdb23ab320f8b664240">CloseElement()</link> </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ad4da41082cbb268042b05b34fde40a6d"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp; tinyxml2::XMLPrinter::operator= (const <link linkend="_classtinyxml2_1_1XMLPrinter">XMLPrinter</link> &amp; )<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a83f100894c0ed069ffbd2c5a2c9ed190"/><section>
    <title>PrepareForNewNode()</title>
<indexterm><primary>PrepareForNewNode</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PrepareForNewNode</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PrepareForNewNode (bool compactMode)<computeroutput>[private]</computeroutput></computeroutput></para>
<para>Prepares to write a new node. This includes sealing an element that was just opened, and writing any whitespace necessary if not in compact mode. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a4fefcc4003e88f63e0dfd9f77c386078"/><section>
    <title>Print()</title>
<indexterm><primary>Print</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Print</secondary></indexterm>
<para><computeroutput>virtual void tinyxml2::XMLPrinter::Print (const char * format,  ...)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a01148e2ebe6776e38c5a3e41bc5feb74"/><section>
    <title>PrintSpace()</title>
<indexterm><primary>PrintSpace</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PrintSpace</secondary></indexterm>
<para><computeroutput>virtual void tinyxml2::XMLPrinter::PrintSpace (int depth)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Prints out the space before an element. You may override to change the space and tabs used. A <link linkend="_classtinyxml2_1_1XMLPrinter_1a01148e2ebe6776e38c5a3e41bc5feb74">PrintSpace()</link> override should call <link linkend="_classtinyxml2_1_1XMLPrinter_1a4fefcc4003e88f63e0dfd9f77c386078">Print()</link>. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a5495e504053f63f2c4d603327314fa91"/><section>
    <title>PrintString()</title>
<indexterm><primary>PrintString</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PrintString</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PrintString (const char * , bool restrictedEntitySet)<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a51f7950d7b7a19f0d3a0d549a318d45f"/><section>
    <title>PushAttribute()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, bool value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a9a4e2c9348b42e147629d5a99f4af3f0"/><section>
    <title>PushAttribute()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, const char * value)</computeroutput></para><para>

<para>If streaming, add an attribute to an open element. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a1714867af40e68ca404c3e84b6cac2a6"/><section>
    <title>PushAttribute()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, double value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a69120c82088597372d28d0a98f2ee7a1"/><section>
    <title>PushAttribute()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, int value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a9bc2fe21a83a70e6aa0415f2034ecbff"/><section>
    <title>PushAttribute()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, int64_t value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a0cfb03811df0873faa59a12de009bf33"/><section>
    <title>PushAttribute()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, uint64_t value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1aa41039e51990aaf5342f3e0575a692c4"/><section>
    <title>PushAttribute()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>PushAttribute</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushAttribute</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushAttribute (const char * name, unsigned value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1afc8416814219591c2fd5656e0c233140"/><section>
    <title>PushComment()</title>
<indexterm><primary>PushComment</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushComment</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushComment (const char * comment)</computeroutput></para><para>

<para>Add a comment. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a2fe3565e262594efc6c0276723c83fe7"/><section>
    <title>PushDeclaration()</title>
<indexterm><primary>PushDeclaration</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushDeclaration</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushDeclaration (const char * value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a178c608ce8476043d5d6513819cde903"/><section>
    <title>PushHeader()</title>
<indexterm><primary>PushHeader</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushHeader</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushHeader (bool writeBOM, bool writeDeclaration)</computeroutput></para>
<para>If streaming, write the BOM and declaration. </para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a4390e5fa1ed05189a8686647345ab29f"/><section>
    <title>PushText()<computeroutput>[1/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (bool value)</computeroutput></para><para>

<para>Add a text node from a bool. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a1cc16a9362df4332012cb13cff6441b3"/><section>
    <title>PushText()<computeroutput>[2/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (const char * text, bool cdata = <computeroutput>false</computeroutput>
)</computeroutput></para><para>

<para>Add a text node. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1aa715302dfc09473c77c853cbd5431965"/><section>
    <title>PushText()<computeroutput>[3/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (double value)</computeroutput></para><para>

<para>Add a text node from a double. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a1dbb1390e829d0673af66b9cd1928bd7"/><section>
    <title>PushText()<computeroutput>[4/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (float value)</computeroutput></para><para>

<para>Add a text node from a float. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a3e0d4d78de25d4cf081009e1431cea7e"/><section>
    <title>PushText()<computeroutput>[5/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (int value)</computeroutput></para><para>

<para>Add a text node from an integer. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a96b0a0bfe105154a0a6c37d725258f0a"/><section>
    <title>PushText()<computeroutput>[6/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (int64_t value)</computeroutput></para><para>

<para>Add a text node from a signed 64bit integer. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a60b0a4cf57371ff8679c2c7556ccb708"/><section>
    <title>PushText()<computeroutput>[7/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (uint64_t value)</computeroutput></para><para>

<para>Add a text node from an unsigned 64bit integer. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a661fb50e7e0a4918d2d259cb0fae647e"/><section>
    <title>PushText()<computeroutput>[8/8]</computeroutput></title>
<indexterm><primary>PushText</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushText</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushText (unsigned value)</computeroutput></para><para>

<para>Add a text node from an unsigned. </para>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ab1efc6d1548505e9984185f58f54b713"/><section>
    <title>PushUnknown()</title>
<indexterm><primary>PushUnknown</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>PushUnknown</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::PushUnknown (const char * value)</computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a03de437ca25fbcc0d7df4bc29296e7f4"/><section>
    <title>Putc()</title>
<indexterm><primary>Putc</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Putc</secondary></indexterm>
<para><computeroutput>virtual void tinyxml2::XMLPrinter::Putc (char ch)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ac6e2c72c5d796f5b4de6ce81ca95e3fa"/><section>
    <title>SealElementIfJustOpened()</title>
<indexterm><primary>SealElementIfJustOpened</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>SealElementIfJustOpened</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::SealElementIfJustOpened ( )<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a3f16a30be1537ac141d9bd2db824ba9e"/><section>
    <title>Visit()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>Visit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Visit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::Visit (const <link linkend="_classtinyxml2_1_1XMLComment">XMLComment</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit a comment node. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1acc8147fb5a85f6c65721654e427752d7">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a9ceff5cd85e5db65838962174fcdcc46"/><section>
    <title>Visit()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>Visit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Visit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::Visit (const <link linkend="_classtinyxml2_1_1XMLDeclaration">XMLDeclaration</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit a declaration. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1adc75bd459fc7ba8223b50f0616767f9a">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a275ae25544a12199ae40b6994ca6e4de"/><section>
    <title>Visit()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>Visit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Visit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::Visit (const <link linkend="_classtinyxml2_1_1XMLText">XMLText</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit a text node. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1af30233565856480ea48b6fa0d6dec65b">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1aa15e1da81e17dea5da6499ac5b08d9d8"/><section>
    <title>Visit()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>Visit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Visit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::Visit (const <link linkend="_classtinyxml2_1_1XMLUnknown">XMLUnknown</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit an unknown node. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1a14e4748387c34bf53d24e8119bb1f292">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ae966b988a7a28c41e91c5ca17fb2054b"/><section>
    <title>VisitEnter()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>VisitEnter</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>VisitEnter</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::VisitEnter (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit a document. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1acb3c22fc5f60eb9db98f533f2761f67d">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a2ce2aa508c21ac91615093ddb9c282c5"/><section>
    <title>VisitEnter()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>VisitEnter</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>VisitEnter</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::VisitEnter (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp; , const <link linkend="_classtinyxml2_1_1XMLAttribute">XMLAttribute</link> * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit an element. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1af97980a17dd4e37448b181f5ddfa92b5">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a15fc1f2b922f540917dcf52808737b29"/><section>
    <title>VisitExit()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>VisitExit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>VisitExit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::VisitExit (const <link linkend="_classtinyxml2_1_1XMLDocument">XMLDocument</link> &amp; )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit a document. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1a170e9989cd046ba904f302d087e07086">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ae99e0a7086543591edfb565f24689098"/><section>
    <title>VisitExit()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>VisitExit</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>VisitExit</secondary></indexterm>
<para><computeroutput>virtual bool tinyxml2::XMLPrinter::VisitExit (const <link linkend="_classtinyxml2_1_1XMLElement">XMLElement</link> &amp; )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit an element. </para>
</para>
<para>
Reimplemented from <link linkend="_classtinyxml2_1_1XMLVisitor_1a772f10ddc83f881956d32628faa16eb6">tinyxml2::XMLVisitor</link>.</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a4bd7f0cabca77ac95c299103fa9592f1"/><section>
    <title>Write()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void tinyxml2::XMLPrinter::Write (const char * data)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLPrinter_a4bd7f0cabca77ac95c299103fa9592f1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtinyxml2_1_1XMLPrinter_a4bd7f0cabca77ac95c299103fa9592f1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a65824af90e503b850f076725ccc95cfc"/><section>
    <title>Write()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Write</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>virtual void tinyxml2::XMLPrinter::Write (const char * data, size_t size)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a55a5cf6d1835248eb2fce3bcbcc3410a"/><section>
    <title>_buffer</title>
<indexterm><primary>_buffer</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt;char, 20&gt; tinyxml2::XMLPrinter::_buffer<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a7bc067aa3f0dcee68e4ac75e19117bd0"/><section>
    <title>_compactMode</title>
<indexterm><primary>_compactMode</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_compactMode</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_compactMode<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a19cd59a9dbe4b666264803fb91ac8ec1"/><section>
    <title>_depth</title>
<indexterm><primary>_depth</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_depth</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLPrinter::_depth<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1ac07169d58b465214a2b1fa306e617c26"/><section>
    <title>_elementJustOpened</title>
<indexterm><primary>_elementJustOpened</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_elementJustOpened</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_elementJustOpened<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a334eb34c43f21daebef9341b4768c275"/><section>
    <title>_entityFlag</title>
<indexterm><primary>_entityFlag</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_entityFlag</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_entityFlag[<link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5">ENTITY_RANGE</link>]<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1abbd7ac45d97ae5eceec12d6c058119f9"/><section>
    <title>_firstElement</title>
<indexterm><primary>_firstElement</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_firstElement</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_firstElement<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a79d91decf17990f7ce18b592f3fdf44e"/><section>
    <title>_fp</title>
<indexterm><primary>_fp</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_fp</secondary></indexterm>
<para><computeroutput>FILE* tinyxml2::XMLPrinter::_fp<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a3e27c4b4fe791a96e4e139b5034e190b"/><section>
    <title>_processEntities</title>
<indexterm><primary>_processEntities</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_processEntities</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_processEntities<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a5df242509d42ae1c9128924121ebe093"/><section>
    <title>_restrictedEntityFlag</title>
<indexterm><primary>_restrictedEntityFlag</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_restrictedEntityFlag</secondary></indexterm>
<para><computeroutput>bool tinyxml2::XMLPrinter::_restrictedEntityFlag[<link linkend="_classtinyxml2_1_1XMLPrinter_1a86c30ee9c735dc8ea7108f8f61a9b430a2ddc02813235fe451809606959166db5">ENTITY_RANGE</link>]<computeroutput>[private]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a613c11fefb95fa4ac484d76c39309cee"/><section>
    <title>_stack</title>
<indexterm><primary>_stack</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_stack</secondary></indexterm>
<para><computeroutput><link linkend="_classtinyxml2_1_1DynArray">DynArray</link>&lt;const char *, 10&gt; tinyxml2::XMLPrinter::_stack<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtinyxml2_1_1XMLPrinter_1a3c5a442e57131faefde97188e92144f3"/><section>
    <title>_textDepth</title>
<indexterm><primary>_textDepth</primary><secondary>tinyxml2::XMLPrinter</secondary></indexterm>
<indexterm><primary>tinyxml2::XMLPrinter</primary><secondary>_textDepth</secondary></indexterm>
<para><computeroutput>int tinyxml2::XMLPrinter::_textDepth<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
include/<link linkend="_tinyxml2_8h">tinyxml2.h</link></section>
</section>
