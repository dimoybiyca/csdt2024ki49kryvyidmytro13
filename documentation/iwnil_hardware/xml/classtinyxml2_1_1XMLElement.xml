<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classtinyxml2_1_1XMLElement" kind="class" language="C++" prot="public">
    <compoundname>tinyxml2::XMLElement</compoundname>
    <basecompoundref refid="classtinyxml2_1_1XMLNode" prot="public" virt="non-virtual">tinyxml2::XMLNode</basecompoundref>
    <includes refid="tinyxml2_8h" local="no">tinyxml2.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4" prot="public" static="no" strong="no">
        <type></type>
        <name>ElementClosingType</name>
        <qualifiedname>tinyxml2::XMLElement::ElementClosingType</qualifiedname>
        <enumvalue id="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4a78cf277c55b4655c86458dfecb11d349" prot="public">
          <name>OPEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4aa2f1f384020d2d4538ad2ec84930a028" prot="public">
          <name>CLOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4aa2857344b98a931536c443cd0cadc4b7" prot="public">
          <name>CLOSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1825" column="9" bodyfile="include/tinyxml2.h" bodystart="1826" bodyend="1830"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="classtinyxml2_1_1XMLElement_1a45bfb6bbbf778e66b267905675e42d9c" prot="private" static="no" strong="no">
        <type></type>
        <name></name>
        <qualifiedname>tinyxml2::XMLElement</qualifiedname>
        <enumvalue id="classtinyxml2_1_1XMLElement_1a45bfb6bbbf778e66b267905675e42d9ca21625cc023a5f905272d3f116cb9143e" prot="private">
          <name>BUF_SIZE</name>
          <initializer>= 200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1852" column="9" bodyfile="include/tinyxml2.h" bodystart="1853" bodyend="1855"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classtinyxml2_1_1XMLElement_1a4eee3bda60c60a30e4e8cd4ea91c4c6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class XMLDocument</definition>
        <argsstring></argsstring>
        <name>XMLDocument</name>
        <qualifiedname>tinyxml2::XMLElement::XMLDocument</qualifiedname>
        <param>
          <type><ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1385" column="22" bodyfile="include/tinyxml2.h" bodystart="1385" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtinyxml2_1_1XMLElement_1a3f3f8f60bc21aae4c1bb9470d7ab0823" prot="private" static="no" mutable="no">
        <type><ref refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4" kindref="member">ElementClosingType</ref></type>
        <definition>ElementClosingType tinyxml2::XMLElement::_closingType</definition>
        <argsstring></argsstring>
        <name>_closingType</name>
        <qualifiedname>tinyxml2::XMLElement::_closingType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1856" column="28" bodyfile="include/tinyxml2.h" bodystart="1856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtinyxml2_1_1XMLElement_1ad067115a9f42b2df1fcdf3e0355f2789" prot="private" static="no" mutable="no">
        <type><ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        <definition>XMLAttribute* tinyxml2::XMLElement::_rootAttribute</definition>
        <argsstring></argsstring>
        <name>_rootAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::_rootAttribute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1860" column="22" bodyfile="include/tinyxml2.h" bodystart="1860" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1abd36e34e4428a8eeeffbe87eab0b124d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tinyxml2::XMLElement::Name</definition>
        <argsstring>() const</argsstring>
        <name>Name</name>
        <qualifiedname>tinyxml2::XMLElement::Name</qualifiedname>
        <briefdescription>
<para>Get the name of an element (which is the <ref refid="classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680" kindref="member">Value()</ref> of the node.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1389" column="20" bodyfile="include/tinyxml2.h" bodystart="1389" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a97712009a530d8cb8a63bf705f02b4f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetName</definition>
        <argsstring>(const char *str, bool staticMem=false)</argsstring>
        <name>SetName</name>
        <qualifiedname>tinyxml2::XMLElement::SetName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>staticMem</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Set the name of the element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1394" column="14" bodyfile="include/tinyxml2.h" bodystart="1394" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1abade4c59bd6f16c85caa42d3c9eb617d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> *</type>
        <definition>virtual XMLElement * tinyxml2::XMLElement::ToElement</definition>
        <argsstring>()</argsstring>
        <name>ToElement</name>
        <qualifiedname>tinyxml2::XMLElement::ToElement</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1a9417e1f8a9787ae27741605493514b18">ToElement</reimplements>
        <briefdescription>
<para>Safely cast to an Element, or null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1399" column="28" bodyfile="include/tinyxml2.h" bodystart="1399" bodyend="1402"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a97ac0e6fd96705fd151481a8f5f67c56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> *</type>
        <definition>virtual const XMLElement * tinyxml2::XMLElement::ToElement</definition>
        <argsstring>() const</argsstring>
        <name>ToElement</name>
        <qualifiedname>tinyxml2::XMLElement::ToElement</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1a717b5e8a2dd19f1375e388eb749a773c">ToElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1403" column="34" bodyfile="include/tinyxml2.h" bodystart="1403" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a3ea8a40e788fb9ad876c28a32932c6d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLElement::Accept</definition>
        <argsstring>(XMLVisitor *visitor) const</argsstring>
        <name>Accept</name>
        <qualifiedname>tinyxml2::XMLElement::Accept</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785">Accept</reimplements>
        <param>
          <type><ref refid="classtinyxml2_1_1XMLVisitor" kindref="compound">XMLVisitor</ref> *</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept a hierarchical visit of the nodes in the TinyXML-2 DOM. Every node in the XML tree will be conditionally visited and the host will be called back via the <ref refid="classtinyxml2_1_1XMLVisitor" kindref="compound">XMLVisitor</ref> interface.</para>
<para>This is essentially a SAX interface for TinyXML-2. (Note however it doesn&apos;t re-parse the XML for the callbacks, so the performance of TinyXML-2 is unchanged by using this interface versus any other.)</para>
<para>The interface has been based on ideas from:</para>
<para><itemizedlist>
<listitem><para><ulink url="http://www.saxproject.org/">http://www.saxproject.org/</ulink></para>
</listitem><listitem><para><ulink url="http://c2.com/cgi/wiki?HierarchicalVisitorPattern">http://c2.com/cgi/wiki?HierarchicalVisitorPattern</ulink></para>
</listitem></itemizedlist>
</para>
<para>Which are both good references for &quot;visiting&quot;.</para>
<para>An example of using <ref refid="classtinyxml2_1_1XMLElement_1a3ea8a40e788fb9ad876c28a32932c6d5" kindref="member">Accept()</ref>: <verbatim>XMLPrinter printer;
tinyxmlDoc.Accept( &amp;printer );
const char* xmlcstr = printer.CStr();
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1407" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a48cf4a315cfbac7d74cd0d5ff2c5df51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tinyxml2::XMLElement::Attribute</definition>
        <argsstring>(const char *name, const char *value=0) const</argsstring>
        <name>Attribute</name>
        <qualifiedname>tinyxml2::XMLElement::Attribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given an attribute name, <ref refid="classtinyxml2_1_1XMLElement_1a48cf4a315cfbac7d74cd0d5ff2c5df51" kindref="member">Attribute()</ref> returns the value for the attribute of that name, or null if none exists. For example:</para>
<para><verbatim>const char* value = ele-&gt;Attribute( &quot;foo&quot; );
</verbatim></para>
<para>The &apos;value&apos; parameter is normally null. However, if specified, the attribute will only be returned if the &apos;name&apos; and &apos;value&apos; match. This allow you to write code:</para>
<para><verbatim>if ( ele-&gt;Attribute( &quot;foo&quot;, &quot;bar&quot; ) ) callFooIsBar();
</verbatim></para>
<para>rather than: <verbatim>if ( ele-&gt;Attribute( &quot;foo&quot; ) ) {
    if ( strcmp( ele-&gt;Attribute( &quot;foo&quot; ), &quot;bar&quot; ) == 0 ) callFooIsBar();
}
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1432" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tinyxml2::XMLElement::IntAttribute</definition>
        <argsstring>(const char *name, int defaultValue=0) const</argsstring>
        <name>IntAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::IntAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given an attribute name, <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> returns the value of the attribute interpreted as an integer. The default value will be returned if the attribute isn&apos;t present, or if there is an error. (For a method with error checking, see <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1440" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1afea43a1d4aa33e3703ddee5fc9adc26c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned tinyxml2::XMLElement::UnsignedAttribute</definition>
        <argsstring>(const char *name, unsigned defaultValue=0) const</argsstring>
        <name>UnsignedAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::UnsignedAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1442" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a66d96972adecd816194191f13cc4a0a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t tinyxml2::XMLElement::Int64Attribute</definition>
        <argsstring>(const char *name, int64_t defaultValue=0) const</argsstring>
        <name>Int64Attribute</name>
        <qualifiedname>tinyxml2::XMLElement::Int64Attribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1444" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a226502bab8f1be7ede1fdd255398eb85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t tinyxml2::XMLElement::Unsigned64Attribute</definition>
        <argsstring>(const char *name, uint64_t defaultValue=0) const</argsstring>
        <name>Unsigned64Attribute</name>
        <qualifiedname>tinyxml2::XMLElement::Unsigned64Attribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1446" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a53eda26131e1ad1031ef8ec8adb51bd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tinyxml2::XMLElement::BoolAttribute</definition>
        <argsstring>(const char *name, bool defaultValue=false) const</argsstring>
        <name>BoolAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::BoolAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1448" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a10a90c505aea716bf073eea1c97f33b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tinyxml2::XMLElement::DoubleAttribute</definition>
        <argsstring>(const char *name, double defaultValue=0) const</argsstring>
        <name>DoubleAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::DoubleAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1450" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ab1f4be2332e27dc640e9b6abd01d64dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float tinyxml2::XMLElement::FloatAttribute</definition>
        <argsstring>(const char *name, float defaultValue=0) const</argsstring>
        <name>FloatAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::FloatAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" kindref="member">IntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1452" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryIntAttribute</definition>
        <argsstring>(const char *name, int *value) const</argsstring>
        <name>QueryIntAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryIntAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given an attribute name, <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> returns XML_SUCCESS, XML_WRONG_ATTRIBUTE_TYPE if the conversion can&apos;t be performed, or XML_NO_ATTRIBUTE if the attribute doesn&apos;t exist. If successful, the result of the conversion will be written to &apos;value&apos;. If not successful, nothing will be written to &apos;value&apos;. This allows you to provide default value:</para>
<para><verbatim>int value = 10;
QueryIntAttribute( &quot;foo&quot;, &amp;value );     // if &quot;foo&quot; isn&apos;t found, value will still be 10
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1467" column="18" bodyfile="include/tinyxml2.h" bodystart="1467" bodyend="1475"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a6d5176260db00ea301c01af8457cd993">tinyxml2::XMLAttribute::QueryIntValue</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a26fc84cbfba6769dafcfbf256c05e22f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryUnsignedAttribute</definition>
        <argsstring>(const char *name, unsigned int *value) const</argsstring>
        <name>QueryUnsignedAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryUnsignedAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1478" column="18" bodyfile="include/tinyxml2.h" bodystart="1478" bodyend="1486"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a48a7f3496f1415832e451bd8d09c9cb9">tinyxml2::XMLAttribute::QueryUnsignedValue</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a7c0955d80b6f8d196744eacb0f6e90a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryInt64Attribute</definition>
        <argsstring>(const char *name, int64_t *value) const</argsstring>
        <name>QueryInt64Attribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryInt64Attribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1489" column="18" bodyfile="include/tinyxml2.h" bodystart="1489" bodyend="1497"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a4e25344d6e4159026be34dbddf1dcac2">tinyxml2::XMLAttribute::QueryInt64Value</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a13dd590b5d3958ce2ed79844aacd9405" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryUnsigned64Attribute</definition>
        <argsstring>(const char *name, uint64_t *value) const</argsstring>
        <name>QueryUnsigned64Attribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryUnsigned64Attribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1500" column="18" bodyfile="include/tinyxml2.h" bodystart="1500" bodyend="1508"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1af793c695e7ee65cf20b8010d38b1d157">tinyxml2::XMLAttribute::QueryUnsigned64Value</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a14c1bb77c39689838be01838d86ca872" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryBoolAttribute</definition>
        <argsstring>(const char *name, bool *value) const</argsstring>
        <name>QueryBoolAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryBoolAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1511" column="18" bodyfile="include/tinyxml2.h" bodystart="1511" bodyend="1519"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a5f32e038954256f61c21ff20fd13a09c">tinyxml2::XMLAttribute::QueryBoolValue</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a5f0964e2dbd8e2ee7fce9beab689443c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryDoubleAttribute</definition>
        <argsstring>(const char *name, double *value) const</argsstring>
        <name>QueryDoubleAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryDoubleAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1521" column="18" bodyfile="include/tinyxml2.h" bodystart="1521" bodyend="1529"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a2aa6e55e8ea03af0609cf6690bff79b9">tinyxml2::XMLAttribute::QueryDoubleValue</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1acd5eeddf6002ef90806af794b9d9a5a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryFloatAttribute</definition>
        <argsstring>(const char *name, float *value) const</argsstring>
        <name>QueryFloatAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryFloatAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1531" column="18" bodyfile="include/tinyxml2.h" bodystart="1531" bodyend="1539"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a049dea6449a6259b6cfed44a9427b607">tinyxml2::XMLAttribute::QueryFloatValue</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1adb8ae765f98d0c5037faec48deea78bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryStringAttribute</definition>
        <argsstring>(const char *name, const char **value) const</argsstring>
        <name>QueryStringAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryStringAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1542" column="18" bodyfile="include/tinyxml2.h" bodystart="1542" bodyend="1551"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1ab1c5cd993f836a771818ca408994b14e">tinyxml2::XMLAttribute::Value</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08abefb89c44285fb68e2218b2c71767f27" compoundref="tinyxml2_8h" startline="587">tinyxml2::XML_NO_ATTRIBUTE</references>
        <references refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08a1fe1262fdb5ac05dd9cc4631f8c8e00d" compoundref="tinyxml2_8h" startline="586">tinyxml2::XML_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a5b7df3bed2b8954eabf227fa204522eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, int *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given an attribute name, <ref refid="classtinyxml2_1_1XMLElement_1a5b7df3bed2b8954eabf227fa204522eb" kindref="member">QueryAttribute()</ref> returns XML_SUCCESS, XML_WRONG_ATTRIBUTE_TYPE if the conversion can&apos;t be performed, or XML_NO_ATTRIBUTE if the attribute doesn&apos;t exist. It is overloaded for the primitive types, and is a generally more convenient replacement of <ref refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" kindref="member">QueryIntAttribute()</ref> and related functions.</para>
<para>If successful, the result of the conversion will be written to &apos;value&apos;. If not successful, nothing will be written to &apos;value&apos;. This allows you to provide default value:</para>
<para><verbatim>int value = 10;
QueryAttribute( &quot;foo&quot;, &amp;value );        // if &quot;foo&quot; isn&apos;t found, value will still be 10
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1570" column="18" bodyfile="include/tinyxml2.h" bodystart="1570" bodyend="1573"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a432276ea6e034cad19ad66de887ee13c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, unsigned int *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1575" column="18" bodyfile="include/tinyxml2.h" bodystart="1575" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a4867aea7a812acf7f00a915e4eaeaf3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, int64_t *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1580" column="18" bodyfile="include/tinyxml2.h" bodystart="1580" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ad2175dd6a927f7b0c5bfcde727da2b35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, uint64_t *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1585" column="18" bodyfile="include/tinyxml2.h" bodystart="1585" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a17139a22f2552439a7c2780e8e901522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, bool *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1590" column="18" bodyfile="include/tinyxml2.h" bodystart="1590" bodyend="1593"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a4f4da49900e82e25d163a7c0325fcc5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, double *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1595" column="18" bodyfile="include/tinyxml2.h" bodystart="1595" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ac85b18ccd9ee8a79a2fd97cc593aae43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, float *value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1600" column="18" bodyfile="include/tinyxml2.h" bodystart="1600" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ae6a3656a3af23b2c265b8fed8e888e30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryAttribute</definition>
        <argsstring>(const char *name, const char **value) const</argsstring>
        <name>QueryAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::QueryAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1605" column="18" bodyfile="include/tinyxml2.h" bodystart="1605" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a11943abf2d0831548c3790dd5d9f119c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1611" column="14" bodyfile="include/tinyxml2.h" bodystart="1611" bodyend="1615"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aae6568c64c7f1cc88be8461ba41a79cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, int value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1617" column="14" bodyfile="include/tinyxml2.h" bodystart="1617" bodyend="1621"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ae143997e90064ba82326b29a9930ea8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, unsigned value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1623" column="14" bodyfile="include/tinyxml2.h" bodystart="1623" bodyend="1627"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aaeefdf9171fec91b13a776b42299b0dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, int64_t value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1630" column="14" bodyfile="include/tinyxml2.h" bodystart="1630" bodyend="1634"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ad598868c0599ddc4695dab18552c308d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, uint64_t value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1637" column="14" bodyfile="include/tinyxml2.h" bodystart="1637" bodyend="1641"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aa848b696e6a75e4e545c6da9893b11e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, bool value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1644" column="14" bodyfile="include/tinyxml2.h" bodystart="1644" bodyend="1648"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a233397ee81e70eb5d4b814c5f8698533" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, double value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1650" column="14" bodyfile="include/tinyxml2.h" bodystart="1650" bodyend="1654"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a554b70d882e65b28fc084b23df9b9759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetAttribute</definition>
        <argsstring>(const char *name, float value)</argsstring>
        <name>SetAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::SetAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the named attribute to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1656" column="14" bodyfile="include/tinyxml2.h" bodystart="1656" bodyend="1660"/>
        <references refid="classtinyxml2_1_1XMLAttribute_1a406d2c4a13c7af99a65edb59dd9f7581">tinyxml2::XMLAttribute::SetAttribute</references>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aebd45aa7118964c30b32fe12e944628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::DeleteAttribute</definition>
        <argsstring>(const char *name)</argsstring>
        <name>DeleteAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::DeleteAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete an attribute. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1665" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a4a7c4392658833bb8138c474d15a805a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        <definition>const XMLAttribute * tinyxml2::XMLElement::FirstAttribute</definition>
        <argsstring>() const</argsstring>
        <name>FirstAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::FirstAttribute</qualifiedname>
        <briefdescription>
<para>Return the first attribute in the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1668" column="28" bodyfile="include/tinyxml2.h" bodystart="1668" bodyend="1671"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a157750dac8037a316fd1af1a973dfa2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        <definition>const XMLAttribute * tinyxml2::XMLElement::FindAttribute</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>FindAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::FindAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Query a specific attribute in the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1673" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a0fa5bea0a4daf3ddd503dcabb823eba6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tinyxml2::XMLElement::GetText</definition>
        <argsstring>() const</argsstring>
        <name>GetText</name>
        <qualifiedname>tinyxml2::XMLElement::GetText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function for easy access to the text inside an element. Although easy and concise, <ref refid="classtinyxml2_1_1XMLElement_1a0fa5bea0a4daf3ddd503dcabb823eba6" kindref="member">GetText()</ref> is limited compared to getting the <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref> child and accessing it directly.</para>
<para>If the first child of &apos;this&apos; is a <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref>, the <ref refid="classtinyxml2_1_1XMLElement_1a0fa5bea0a4daf3ddd503dcabb823eba6" kindref="member">GetText()</ref> returns the character string of the Text node, else null is returned.</para>
<para>This is a convenient method for getting the text of simple contained text: <verbatim>&lt;foo&gt;This is text&lt;/foo&gt;
    const char* str = fooElement-&gt;GetText();
</verbatim></para>
<para>&apos;str&apos; will be a pointer to &quot;This is text&quot;.</para>
<para>Note that this function can be misleading. If the element foo was created from this XML: <verbatim>    &lt;foo&gt;&lt;b&gt;This is text&lt;/b&gt;&lt;/foo&gt;
</verbatim></para>
<para>then the value of str would be null. The first child node isn&apos;t a text node, it is another element. From this XML: <verbatim>    &lt;foo&gt;This is &lt;b&gt;text&lt;/b&gt;&lt;/foo&gt;
</verbatim> <ref refid="classtinyxml2_1_1XMLElement_1a0fa5bea0a4daf3ddd503dcabb823eba6" kindref="member">GetText()</ref> will return &quot;This is &quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1703" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(const char *inText)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>inText</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function for easy access to the text inside an element. Although easy and concise, <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> is limited compared to creating an <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref> child and mutating it directly.</para>
<para>If the first child of &apos;this&apos; is a <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref>, <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> sets its value to the given string, otherwise it will create a first child that is an <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref>.</para>
<para>This is a convenient method for setting the text of simple contained text: <verbatim>&lt;foo&gt;This is text&lt;/foo&gt;
    fooElement-&gt;SetText( &quot;Hullaballoo!&quot; );
&lt;foo&gt;Hullaballoo!&lt;/foo&gt;
</verbatim></para>
<para>Note that this function can be misleading. If the element foo was created from this XML: <verbatim>    &lt;foo&gt;&lt;b&gt;This is text&lt;/b&gt;&lt;/foo&gt;
</verbatim></para>
<para>then it will not change &quot;This is text&quot;, but rather prefix it with a text element: <verbatim>    &lt;foo&gt;Hullaballoo!&lt;b&gt;This is text&lt;/b&gt;&lt;/foo&gt;
</verbatim></para>
<para>For this XML: <verbatim>    &lt;foo /&gt;
</verbatim> <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> will generate <verbatim>    &lt;foo&gt;Hullaballoo!&lt;/foo&gt;
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1739" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aeae8917b5ea6060b3c08d4e3d8d632d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(int value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1741" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a7bbfcc11d516598bc924a8fba4d08597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(unsigned value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1743" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a7b62cd33acdfeff7ea2b1b330d4368e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(int64_t value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1745" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a6e615bc745afd1ca8ded56d7aac02657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1747" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ae4b543d6770de76fb6ab68e541c192a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(bool value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1749" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a67bd77ac9aaeff58ff20b4275a65ba4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(double value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1751" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a51d560da5ae3ad6b75e0ab9ffb2ae42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::SetText</definition>
        <argsstring>(float value)</argsstring>
        <name>SetText</name>
        <qualifiedname>tinyxml2::XMLElement::SetText</qualifiedname>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Convenience method for setting text inside an element. See <ref refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" kindref="member">SetText()</ref> for important limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1753" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryIntText</definition>
        <argsstring>(int *ival) const</argsstring>
        <name>QueryIntText</name>
        <qualifiedname>tinyxml2::XMLElement::QueryIntText</qualifiedname>
        <param>
          <type>int *</type>
          <declname>ival</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to query the value of a child text node. This is probably best shown by example. Given you have a document is this form: <verbatim>    &lt;point&gt;
        &lt;x&gt;1&lt;/x&gt;
        &lt;y&gt;1.4&lt;/y&gt;
    &lt;/point&gt;
</verbatim></para>
<para>The <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> and similar functions provide a safe and easier way to get to the &quot;value&quot; of x and y.</para>
<para><verbatim>    int x = 0;
    float y = 0;    // types of x and y are contrived for example
    const XMLElement* xElement = pointElement-&gt;FirstChildElement( &quot;x&quot; );
    const XMLElement* yElement = pointElement-&gt;FirstChildElement( &quot;y&quot; );
    xElement-&gt;QueryIntText( &amp;x );
    yElement-&gt;QueryFloatText( &amp;y );
</verbatim></para>
<para><simplesect kind="return"><para>XML_SUCCESS (0) on success, XML_CAN_NOT_CONVERT_TEXT if the text cannot be converted to the requested type, and XML_NO_TEXT_NODE if there is no child text to query. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1781" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a14d38aa4b5e18a46274a27425188a6a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryUnsignedText</definition>
        <argsstring>(unsigned *uval) const</argsstring>
        <name>QueryUnsignedText</name>
        <qualifiedname>tinyxml2::XMLElement::QueryUnsignedText</qualifiedname>
        <param>
          <type>unsigned *</type>
          <declname>uval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1783" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a120c538c8eead169e635dbc70fb226d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryInt64Text</definition>
        <argsstring>(int64_t *uval) const</argsstring>
        <name>QueryInt64Text</name>
        <qualifiedname>tinyxml2::XMLElement::QueryInt64Text</qualifiedname>
        <param>
          <type>int64_t *</type>
          <declname>uval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1785" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ac2239b3bd172ad8f5b78d04d4236144b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryUnsigned64Text</definition>
        <argsstring>(uint64_t *uval) const</argsstring>
        <name>QueryUnsigned64Text</name>
        <qualifiedname>tinyxml2::XMLElement::QueryUnsigned64Text</qualifiedname>
        <param>
          <type>uint64_t *</type>
          <declname>uval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1787" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a3fe5417d59eb8f5c4afe924b7d332736" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryBoolText</definition>
        <argsstring>(bool *bval) const</argsstring>
        <name>QueryBoolText</name>
        <qualifiedname>tinyxml2::XMLElement::QueryBoolText</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>bval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1789" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a684679c99bb036a25652744cec6c4d96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryDoubleText</definition>
        <argsstring>(double *dval) const</argsstring>
        <name>QueryDoubleText</name>
        <qualifiedname>tinyxml2::XMLElement::QueryDoubleText</qualifiedname>
        <param>
          <type>double *</type>
          <declname>dval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1791" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1afa332afedd93210daa6d44b88eb11e29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetinyxml2_1a1fbf88509c3ac88c09117b1947414e08" kindref="member">XMLError</ref></type>
        <definition>XMLError tinyxml2::XMLElement::QueryFloatText</definition>
        <argsstring>(float *fval) const</argsstring>
        <name>QueryFloatText</name>
        <qualifiedname>tinyxml2::XMLElement::QueryFloatText</qualifiedname>
        <param>
          <type>float *</type>
          <declname>fval</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1793" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a37b0636adebb8a1a1bc965f60824cb3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tinyxml2::XMLElement::IntText</definition>
        <argsstring>(int defaultValue=0) const</argsstring>
        <name>IntText</name>
        <qualifiedname>tinyxml2::XMLElement::IntText</qualifiedname>
        <param>
          <type>int</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1795" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a49bad014ffcc17b0b6119d5b2c97dfb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned tinyxml2::XMLElement::UnsignedText</definition>
        <argsstring>(unsigned defaultValue=0) const</argsstring>
        <name>UnsignedText</name>
        <qualifiedname>tinyxml2::XMLElement::UnsignedText</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1798" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aab6151f7e3b4c2c0a8234e262d7b6b8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t tinyxml2::XMLElement::Int64Text</definition>
        <argsstring>(int64_t defaultValue=0) const</argsstring>
        <name>Int64Text</name>
        <qualifiedname>tinyxml2::XMLElement::Int64Text</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1800" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1af48c1023abbac1acdf4927c51c3a5f0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t tinyxml2::XMLElement::Unsigned64Text</definition>
        <argsstring>(uint64_t defaultValue=0) const</argsstring>
        <name>Unsigned64Text</name>
        <qualifiedname>tinyxml2::XMLElement::Unsigned64Text</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1802" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a68569f59f6382bcea7f5013ec59736d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tinyxml2::XMLElement::BoolText</definition>
        <argsstring>(bool defaultValue=false) const</argsstring>
        <name>BoolText</name>
        <qualifiedname>tinyxml2::XMLElement::BoolText</qualifiedname>
        <param>
          <type>bool</type>
          <declname>defaultValue</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1804" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a81b1ff0cf2f2cd09be8badc08b39a2b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tinyxml2::XMLElement::DoubleText</definition>
        <argsstring>(double defaultValue=0) const</argsstring>
        <name>DoubleText</name>
        <qualifiedname>tinyxml2::XMLElement::DoubleText</qualifiedname>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1806" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a45444eb21f99ca46101545992dc2e927" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float tinyxml2::XMLElement::FloatText</definition>
        <argsstring>(float defaultValue=0) const</argsstring>
        <name>FloatText</name>
        <qualifiedname>tinyxml2::XMLElement::FloatText</qualifiedname>
        <param>
          <type>float</type>
          <declname>defaultValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" kindref="member">QueryIntText()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1808" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> *</type>
        <definition>XMLElement * tinyxml2::XMLElement::InsertNewChildElement</definition>
        <argsstring>(const char *name)</argsstring>
        <name>InsertNewChildElement</name>
        <qualifiedname>tinyxml2::XMLElement::InsertNewChildElement</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to create a new <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> and add it as last (right) child of this node. Returns the created and inserted element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1814" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aaed36d3a8082b083ec4f1de55ee68cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLComment" kindref="compound">XMLComment</ref> *</type>
        <definition>XMLComment * tinyxml2::XMLElement::InsertNewComment</definition>
        <argsstring>(const char *comment)</argsstring>
        <name>InsertNewComment</name>
        <qualifiedname>tinyxml2::XMLElement::InsertNewComment</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" kindref="member">InsertNewChildElement()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1816" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ac30367a5e25ff30e178b56e0e1456d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref> *</type>
        <definition>XMLText * tinyxml2::XMLElement::InsertNewText</definition>
        <argsstring>(const char *text)</argsstring>
        <name>InsertNewText</name>
        <qualifiedname>tinyxml2::XMLElement::InsertNewText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" kindref="member">InsertNewChildElement()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1818" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a7f11671a928649add7e3e18de7adf84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLDeclaration" kindref="compound">XMLDeclaration</ref> *</type>
        <definition>XMLDeclaration * tinyxml2::XMLElement::InsertNewDeclaration</definition>
        <argsstring>(const char *text)</argsstring>
        <name>InsertNewDeclaration</name>
        <qualifiedname>tinyxml2::XMLElement::InsertNewDeclaration</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" kindref="member">InsertNewChildElement()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1820" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1afe6cfefb48f8fbcb29a790f2042b55a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLUnknown" kindref="compound">XMLUnknown</ref> *</type>
        <definition>XMLUnknown * tinyxml2::XMLElement::InsertNewUnknown</definition>
        <argsstring>(const char *text)</argsstring>
        <name>InsertNewUnknown</name>
        <qualifiedname>tinyxml2::XMLElement::InsertNewUnknown</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>See <ref refid="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" kindref="member">InsertNewChildElement()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1822" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a6965ff89557f27d4082d7043d5145555" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4" kindref="member">ElementClosingType</ref></type>
        <definition>ElementClosingType tinyxml2::XMLElement::ClosingType</definition>
        <argsstring>() const</argsstring>
        <name>ClosingType</name>
        <qualifiedname>tinyxml2::XMLElement::ClosingType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1831" column="28" bodyfile="include/tinyxml2.h" bodystart="1831" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a1edb4f3b8e2622e65663b068bc907122" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classtinyxml2_1_1XMLNode" kindref="compound">XMLNode</ref> *</type>
        <definition>virtual XMLNode * tinyxml2::XMLElement::ShallowClone</definition>
        <argsstring>(XMLDocument *document) const</argsstring>
        <name>ShallowClone</name>
        <qualifiedname>tinyxml2::XMLElement::ShallowClone</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1a9046880c05b81ad99ee645f4b2a53ecd">ShallowClone</reimplements>
        <param>
          <type><ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref> *</type>
          <declname>document</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a copy of this node, but not its children. You may pass in a Document pointer that will be the owner of the new Node. If the &apos;document&apos; is null, then the node returned will be allocated from the current Document. (this-&gt;<ref refid="classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501" kindref="member">GetDocument()</ref>)</para>
<para>Note: if called on a <ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref>, this will return null. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1835" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ad9ea913a460b48979bd83cf9871c99f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLElement::ShallowEqual</definition>
        <argsstring>(const XMLNode *compare) const</argsstring>
        <name>ShallowEqual</name>
        <qualifiedname>tinyxml2::XMLElement::ShallowEqual</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1a7ce18b751c3ea09eac292dca264f9226">ShallowEqual</reimplements>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLNode" kindref="compound">XMLNode</ref> *</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if 2 nodes are the same, but don&apos;t test children. The 2 nodes do not need to be in the same Document.</para>
<para>Note: if called on a <ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref>, this will return false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1836" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a072998100b7d0ba5e8aeac6dd6dfb31b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>char *</type>
        <definition>char * tinyxml2::XMLElement::ParseDeep</definition>
        <argsstring>(char *p, StrPair *parentEndTag, int *curLineNumPtr)</argsstring>
        <name>ParseDeep</name>
        <qualifiedname>tinyxml2::XMLElement::ParseDeep</qualifiedname>
        <reimplements refid="classtinyxml2_1_1XMLNode_1ac7df464d8029c9b91e96ab2499222afe">ParseDeep</reimplements>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classtinyxml2_1_1StrPair" kindref="compound">StrPair</ref> *</type>
          <declname>parentEndTag</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>curLineNumPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1839" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a52484940e20f3734e6edc5e5c3af2dbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tinyxml2::XMLElement::XMLElement</definition>
        <argsstring>(XMLDocument *doc)</argsstring>
        <name>XMLElement</name>
        <qualifiedname>tinyxml2::XMLElement::XMLElement</qualifiedname>
        <param>
          <type><ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref> *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1842" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1aa8ac97860674d9f4d0e95383ceac134c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual tinyxml2::XMLElement::~XMLElement</definition>
        <argsstring>()</argsstring>
        <name>~XMLElement</name>
        <qualifiedname>tinyxml2::XMLElement::~XMLElement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1843" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a1aa8ab977a1799bf118efb158248351b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tinyxml2::XMLElement::XMLElement</definition>
        <argsstring>(const XMLElement &amp;)</argsstring>
        <name>XMLElement</name>
        <qualifiedname>tinyxml2::XMLElement::XMLElement</qualifiedname>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1844" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ae300366701a54d4b6d1c287d9b5209a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tinyxml2::XMLElement::operator=</definition>
        <argsstring>(const XMLElement &amp;)</argsstring>
        <name>operator=</name>
        <qualifiedname>tinyxml2::XMLElement::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1845" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1ac9d8fc849ec8acf46678217de011e896" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        <definition>XMLAttribute * tinyxml2::XMLElement::FindOrCreateAttribute</definition>
        <argsstring>(const char *name)</argsstring>
        <name>FindOrCreateAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::FindOrCreateAttribute</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1847" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a1e679b60e191ad79bfcefcd49ca66fa2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tinyxml2::XMLElement::ParseAttributes</definition>
        <argsstring>(char *p, int *curLineNumPtr)</argsstring>
        <name>ParseAttributes</name>
        <qualifiedname>tinyxml2::XMLElement::ParseAttributes</qualifiedname>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>curLineNumPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1848" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1a10e25b09c308a8658d2d6b464745bdc3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        <definition>XMLAttribute * tinyxml2::XMLElement::CreateAttribute</definition>
        <argsstring>()</argsstring>
        <name>CreateAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::CreateAttribute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1850" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtinyxml2_1_1XMLElement_1af6af63c153c343cc71638375c4a2085d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tinyxml2::XMLElement::DeleteAttribute</definition>
        <argsstring>(XMLAttribute *attribute)</argsstring>
        <name>DeleteAttribute</name>
        <qualifiedname>tinyxml2::XMLElement::DeleteAttribute</qualifiedname>
        <param>
          <type><ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="1849" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The element is a container class. It has a value, the element name, and can contain other elements, text, comments, and unknowns. Elements also contain an arbitrary number of attributes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tinyxml2::XMLElement</label>
        <link refid="classtinyxml2_1_1XMLElement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>tinyxml2::XMLNode</label>
        <link refid="classtinyxml2_1_1XMLNode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>tinyxml2::DynArray&lt; tinyxml2::MemPoolT::Block *, 10 &gt;</label>
        <link refid="classtinyxml2_1_1DynArray"/>
        <childnode refid="10" relation="usage">
          <edgelabel>-_mem</edgelabel>
          <edgelabel>-_pool</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; tinyxml2::MemPoolT::Block *, 10 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>tinyxml2::DynArray&lt; tinyxml2::XMLNode *, 10 &gt;</label>
        <link refid="classtinyxml2_1_1DynArray"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-_mem</edgelabel>
          <edgelabel>-_pool</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; tinyxml2::XMLNode *, 10 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>tinyxml2::MemPoolT&lt; sizeof(tinyxml2::XMLAttribute)&gt;</label>
        <link refid="classtinyxml2_1_1MemPoolT"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-_blockPtrs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-_root</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; sizeof(tinyxml2::XMLAttribute)&gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>tinyxml2::MemPoolT&lt; sizeof(tinyxml2::XMLComment)&gt;</label>
        <link refid="classtinyxml2_1_1MemPoolT"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-_blockPtrs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-_root</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; sizeof(tinyxml2::XMLComment)&gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>tinyxml2::MemPoolT&lt; sizeof(tinyxml2::XMLElement)&gt;</label>
        <link refid="classtinyxml2_1_1MemPoolT"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-_blockPtrs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-_root</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; sizeof(tinyxml2::XMLElement)&gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>tinyxml2::MemPoolT&lt; sizeof(tinyxml2::XMLText)&gt;</label>
        <link refid="classtinyxml2_1_1MemPoolT"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-_blockPtrs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-_root</edgelabel>
        </childnode>
        <childnode refid="12" relation="template-instance">
          <edgelabel>&lt; sizeof(tinyxml2::XMLText)&gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>tinyxml2::DynArray&lt; T, INITIAL_SIZE &gt;</label>
        <link refid="classtinyxml2_1_1DynArray"/>
      </node>
      <node id="8">
        <label>tinyxml2::MemPool</label>
        <link refid="classtinyxml2_1_1MemPool"/>
      </node>
      <node id="12">
        <label>tinyxml2::MemPoolT&lt; ITEM_SIZE &gt;</label>
        <link refid="classtinyxml2_1_1MemPoolT"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-_blockPtrs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-_root</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>tinyxml2::MemPoolT&lt; ITEM_SIZE &gt;::Block</label>
        <link refid="structtinyxml2_1_1MemPoolT_1_1Block"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+items</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>tinyxml2::MemPoolT&lt; ITEM_SIZE &gt;::Item</label>
        <link refid="uniontinyxml2_1_1MemPoolT_1_1Item"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+next</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>tinyxml2::StrPair</label>
        <link refid="classtinyxml2_1_1StrPair"/>
      </node>
      <node id="16">
        <label>tinyxml2::XMLAttribute</label>
        <link refid="classtinyxml2_1_1XMLAttribute"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-_name</edgelabel>
          <edgelabel>-_value</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-_next</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-_memPool</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>tinyxml2::XMLDocument</label>
        <link refid="classtinyxml2_1_1XMLDocument"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-_errorStr</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-_unlinked</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-_elementPool</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-_attributePool</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-_textPool</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>-_commentPool</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>tinyxml2::XMLElement</label>
        <link refid="classtinyxml2_1_1XMLElement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-_rootAttribute</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>tinyxml2::XMLNode</label>
        <link refid="classtinyxml2_1_1XMLNode"/>
        <childnode refid="3" relation="usage">
          <edgelabel>#_document</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>#_firstChild</edgelabel>
          <edgelabel>#_lastChild</edgelabel>
          <edgelabel>#_next</edgelabel>
          <edgelabel>#_parent</edgelabel>
          <edgelabel>#_prev</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#_value</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-_memPool</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/tinyxml2.h" line="1383" column="5" bodyfile="include/tinyxml2.h" bodystart="1384" bodyend="1861"/>
    <listofallmembers>
      <member refid="classtinyxml2_1_1XMLElement_1a3f3f8f60bc21aae4c1bb9470d7ab0823" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_closingType</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a8d2d2be0bb6797625551eb0e91f0ff62" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_document</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1aa20c91e4213dc930c5bdf420322ca342" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_firstChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a099b6560ae44ab9edb8453aaf1a3747b" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_lastChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a4e3ff179bc312480b6bc3e57014834f7" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_memPool</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a27e985496b37dd00eb5b9cf59b9e3fb1" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_next</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a176dd1c4965c21c366de192164aa2c13" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_parent</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ab336ed023e15be202ff3b410be01b804" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_parseLineNum</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a9739eb0fb9a1188266052055e7a6bf6b" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_prev</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ad067115a9f42b2df1fcdf3e0355f2789" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_rootAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ac2d5cc463a6c95ec5907d57a119c56da" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_userData</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a3ea9884098b8379de2bb5ab3fc85c0fc" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>_value</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a3ea8a40e788fb9ad876c28a32932c6d5" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>Accept</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a48cf4a315cfbac7d74cd0d5ff2c5df51" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Attribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a53eda26131e1ad1031ef8ec8adb51bd8" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>BoolAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a68569f59f6382bcea7f5013ec59736d2" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>BoolText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a45bfb6bbbf778e66b267905675e42d9ca21625cc023a5f905272d3f116cb9143e" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>BUF_SIZE</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4aa2f1f384020d2d4538ad2ec84930a028" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>CLOSED</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4aa2857344b98a931536c443cd0cadc4b7" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>CLOSING</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a6965ff89557f27d4082d7043d5145555" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>ClosingType</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a10e25b09c308a8658d2d6b464745bdc3" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>CreateAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a3bb369fd733f1989b751d99a9417adab" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeepClone</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aebd45aa7118964c30b32fe12e944628a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeleteAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1af6af63c153c343cc71638375c4a2085d" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeleteAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a363b6edbd6ebd55f8387d2b89f2b0921" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeleteChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a0360085cc54df5bff85d5c5da13afdce" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeleteChildren</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1af86facb14f441c2b91f3518f106dc943" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DeleteNode</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a10a90c505aea716bf073eea1c97f33b5" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DoubleAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a81b1ff0cf2f2cd09be8badc08b39a2b7" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>DoubleText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>ElementClosingType</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a157750dac8037a316fd1af1a973dfa2c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FindAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ac9d8fc849ec8acf46678217de011e896" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FindOrCreateAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a4a7c4392658833bb8138c474d15a805a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FirstAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1abcc2e572dce329539689b426a0840661" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FirstChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a3cc3c85d40ce73d6f5849a35debfccfc" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FirstChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a1bec132dcf085284e0a10755f2cf0d57" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FirstChildElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a46c460e1494ccc2691f515a34e78abc0" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FirstChildElement</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ab1f4be2332e27dc640e9b6abd01d64dd" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FloatAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a45444eb21f99ca46101545992dc2e927" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>FloatText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a6ce3bbe80357f5a4dc5db31a66f2bb18" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>GetDocument</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a48d1695f7c834129e072548957a50501" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>GetDocument</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a9b5fc636646fda761d342c72e91cb286" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>GetLineNum</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a0fa5bea0a4daf3ddd503dcabb823eba6" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>GetText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a18cc02ebd0b06f6bf5db7ef87653e00e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>GetUserData</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a9275138a1b8dd5d8e2c26789bdc23ac8" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertAfterChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a0fd4d2e88fb22d46b5b1474b5b786e35" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertChildPreamble</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ae3b422e98914d6002ca99bb1d2837103" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertEndChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ac609a8f3ea949027f439280c640bbaf2" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertFirstChild</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1abf01fdeb702165fddbc97bcc8af8a1ad" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertNewChildElement</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aaed36d3a8082b083ec4f1de55ee68cc2" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertNewComment</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a7f11671a928649add7e3e18de7adf84a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertNewDeclaration</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ac30367a5e25ff30e178b56e0e1456d23" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertNewText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1afe6cfefb48f8fbcb29a790f2042b55a4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>InsertNewUnknown</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a66d96972adecd816194191f13cc4a0a0" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Int64Attribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aab6151f7e3b4c2c0a8234e262d7b6b8a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Int64Text</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a95a89b13bb14a2d4655e2b5b406c00d4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>IntAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a37b0636adebb8a1a1bc965f60824cb3e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>IntText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a69a29bb8263ff5e9815be180bf27e7af" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>LastChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a5029f38433f2c547ab2c67d20944563f" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>LastChild</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a609e02f02044f39b928d1a3e0de9f532" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>LastChildElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a4b3ee7343ed49c2054fe64ef5639b2ff" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>LastChildElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ae6ab0f078ab8edba2e2c6d1d81a3661e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>LinkEndChild</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1abd36e34e4428a8eeeffbe87eab0b124d" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Name</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1af986c568061b020cf6232bec091388c0" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>NextSibling</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a05d04a9c06dc48ff8473c77774ee94eb" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>NextSibling</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a14ea560df31110ff07a9f566171bf797" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>NextSiblingElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a83f054589f5a669c0dcca72bfd6bfb09" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>NextSiblingElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ac3ab489e6e202a3cd1762d3b332e89d4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>NoChildren</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ab5f90e2493c35702175235127e2935b4a78cf277c55b4655c86458dfecb11d349" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>OPEN</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ae300366701a54d4b6d1c287d9b5209a7" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>operator=</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a4d76b30d1bf4b166d3e4fa3419d51595" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Parent</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ae092b35e0f94c27ad96d0ac92c038e1e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Parent</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a1e679b60e191ad79bfcefcd49ca66fa2" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>ParseAttributes</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a072998100b7d0ba5e8aeac6dd6dfb31b" prot="protected" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ParseDeep</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a92ee96b0d8628bc609f1d34e56d69dfa" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>PreviousSibling</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a5cbc1d7444770fb364a431441b81f21a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>PreviousSibling</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a9453cda5e970375a7b1b2099f8a7c40a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>PreviousSiblingElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1abee2e91cc895adfb8ba24b0b6ec14f00" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>PreviousSiblingElement</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a5b7df3bed2b8954eabf227fa204522eb" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a432276ea6e034cad19ad66de887ee13c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a4867aea7a812acf7f00a915e4eaeaf3e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ad2175dd6a927f7b0c5bfcde727da2b35" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a17139a22f2552439a7c2780e8e901522" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a4f4da49900e82e25d163a7c0325fcc5f" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ac85b18ccd9ee8a79a2fd97cc593aae43" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ae6a3656a3af23b2c265b8fed8e888e30" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a14c1bb77c39689838be01838d86ca872" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryBoolAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a3fe5417d59eb8f5c4afe924b7d332736" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryBoolText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a5f0964e2dbd8e2ee7fce9beab689443c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryDoubleAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a684679c99bb036a25652744cec6c4d96" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryDoubleText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1acd5eeddf6002ef90806af794b9d9a5a5" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryFloatAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1afa332afedd93210daa6d44b88eb11e29" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryFloatText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a7c0955d80b6f8d196744eacb0f6e90a8" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryInt64Attribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a120c538c8eead169e635dbc70fb226d8" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryInt64Text</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a8a78bc1187c1c45ad89f2690eab567b1" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryIntAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a926357996bef633cb736e1a558419632" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryIntText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1adb8ae765f98d0c5037faec48deea78bc" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryStringAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a13dd590b5d3958ce2ed79844aacd9405" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryUnsigned64Attribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ac2239b3bd172ad8f5b78d04d4236144b" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryUnsigned64Text</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a26fc84cbfba6769dafcfbf256c05e22f" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryUnsignedAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a14d38aa4b5e18a46274a27425188a6a1" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>QueryUnsignedText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a11943abf2d0831548c3790dd5d9f119c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aae6568c64c7f1cc88be8461ba41a79cf" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ae143997e90064ba82326b29a9930ea8f" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aaeefdf9171fec91b13a776b42299b0dd" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ad598868c0599ddc4695dab18552c308d" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aa848b696e6a75e4e545c6da9893b11e1" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a233397ee81e70eb5d4b814c5f8698533" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a554b70d882e65b28fc084b23df9b9759" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a97712009a530d8cb8a63bf705f02b4f1" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetName</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a1f9c2cd61b72af5ae708d37b7ad283ce" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aeae8917b5ea6060b3c08d4e3d8d632d7" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a7bbfcc11d516598bc924a8fba4d08597" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a7b62cd33acdfeff7ea2b1b330d4368e4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a6e615bc745afd1ca8ded56d7aac02657" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ae4b543d6770de76fb6ab68e541c192a4" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a67bd77ac9aaeff58ff20b4275a65ba4e" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a51d560da5ae3ad6b75e0ab9ffb2ae42a" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a002978fc889cc011d143185f2377eca2" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetUserData</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a09dd68cf9eae137579f6e50f36487513" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>SetValue</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a1edb4f3b8e2622e65663b068bc907122" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ShallowClone</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1ad9ea913a460b48979bd83cf9871c99f6" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ShallowEqual</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a5dc13f02ae49e3fa609e426f47c8466d" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToComment</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ae78cbef093b115895c1a7b06960396da" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToComment</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a12aa783a3a4445ad5557c7d56cd8dc4a" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToDeclaration</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a93ef0d07257e5c8f62dc869ef4e23b3b" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToDeclaration</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a6107c3f57ab6e0755959947762953652" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToDocument</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ad7e7fd167ffb01b64e3371c0d2cda19b" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToDocument</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1abade4c59bd6f16c85caa42d3c9eb617d" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToElement</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a97ac0e6fd96705fd151481a8f5f67c56" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a5b5b620d8f8a6f8e2cdc8c8ecee1c53e" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>ToElementWithName</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a0aea8c9c5853c35a06da1988486abc60" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a0563966a4e8df58a3bf1b323eedf839a" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1aa8a2dd38b786c3b8d406c2047753cbfd" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToUnknown</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1ab956088fd1ec09c933804000a7a984ea" prot="public" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>ToUnknown</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a9546e242b6a4f232415befb1cfe0fdd4" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Unlink</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a226502bab8f1be7ede1fdd255398eb85" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Unsigned64Attribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1af48c1023abbac1acdf4927c51c3a5f0c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Unsigned64Text</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1afea43a1d4aa33e3703ddee5fc9adc26c" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>UnsignedAttribute</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a49bad014ffcc17b0b6119d5b2c97dfb5" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>UnsignedText</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a0485e51c670e741884cfd8362274d680" prot="public" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>Value</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a4eee3bda60c60a30e4e8cd4ea91c4c6e" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>XMLDocument</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a52484940e20f3734e6edc5e5c3af2dbc" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>XMLElement</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1a1aa8ab977a1799bf118efb158248351b" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>XMLElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a29868df6ca383d574f584dfdd15105b6" prot="protected" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>XMLNode</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a78be01384518a969da905548f318d75b" prot="private" virt="non-virtual"><scope>tinyxml2::XMLElement</scope><name>XMLNode</name></member>
      <member refid="classtinyxml2_1_1XMLElement_1aa8ac97860674d9f4d0e95383ceac134c" prot="private" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>~XMLElement</name></member>
      <member refid="classtinyxml2_1_1XMLNode_1a8ae1bcd23a08ce5c5f97b2ab347b0893" prot="protected" virt="virtual"><scope>tinyxml2::XMLElement</scope><name>~XMLNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
