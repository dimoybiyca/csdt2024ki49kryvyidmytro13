<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classGameProcessor" kind="class" language="C++" prot="public">
    <compoundname>GameProcessor</compoundname>
    <includes refid="GameProcessor_8h" local="no">GameProcessor.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGameProcessor_1aba05a15f61f18bb517b0b076fdcc5407" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GameProcessor::rows</definition>
        <argsstring></argsstring>
        <name>rows</name>
        <qualifiedname>GameProcessor::rows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of rows in the game board. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="25" column="9" bodyfile="include/game/GameProcessor.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameProcessor_1a900ffa42130b54c463705e7ccb543959" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int GameProcessor::cols</definition>
        <argsstring></argsstring>
        <name>cols</name>
        <qualifiedname>GameProcessor::cols</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of columns in the game board. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="26" column="9" bodyfile="include/game/GameProcessor.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameProcessor_1ab86315cb574fa8f30c4557da995aaf92" prot="private" static="no" mutable="no">
        <type><ref refid="classGame" kindref="compound">Game</ref> *</type>
        <definition>Game* GameProcessor::game</definition>
        <argsstring></argsstring>
        <name>game</name>
        <qualifiedname>GameProcessor::game</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the current game instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="27" column="10" bodyfile="include/game/GameProcessor.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="classGameProcessor_1ae281b585e533039255af373913b1df2e" compoundref="GameProcessor_8h" startline="152" endline="155">isAIMove</referencedby>
        <referencedby refid="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" compoundref="GameProcessor_8h" startline="141" endline="144">isMANMove</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGameProcessor_1a8701cb939ffff0264ed91cb981dcd4ad" prot="private" static="no" mutable="no">
        <type><ref refid="classFixedQueue" kindref="compound">FixedQueue</ref></type>
        <definition>FixedQueue GameProcessor::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <qualifiedname>GameProcessor::queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fixed-size queue to track recent moves. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="28" column="16" bodyfile="include/game/GameProcessor.h" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classGameProcessor_1a27ed8da0e891ccdc8c39cc0295b3e888" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::finishGame</definition>
        <argsstring>(int cellType)</argsstring>
        <name>finishGame</name>
        <qualifiedname>GameProcessor::finishGame</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Finishes the game and updates its status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the winning player (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="35" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1ac92f2239927fdc66a2abef53dba6708b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::checkToe</definition>
        <argsstring>()</argsstring>
        <name>checkToe</name>
        <qualifiedname>GameProcessor::checkToe</qualifiedname>
        <briefdescription>
<para>Checks for a toe in the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a9b4038f01958c4b82058263980cda8fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkRow</definition>
        <argsstring>(int cellType)</argsstring>
        <name>checkRow</name>
        <qualifiedname>GameProcessor::checkRow</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning row. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a winning row is found, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="48" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a01805ba1b094f77ff939e721d28dd328" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkCol</definition>
        <argsstring>(int cellType)</argsstring>
        <name>checkCol</name>
        <qualifiedname>GameProcessor::checkCol</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning column. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a winning column is found, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="56" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1aff3573a9a2e0561dc2552b8541b4e816" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkDiag</definition>
        <argsstring>(int cellType)</argsstring>
        <name>checkDiag</name>
        <qualifiedname>GameProcessor::checkDiag</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning diagonal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a winning diagonal is found, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a0fc7f6da401fa4b22b201aa693d7c0ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkDiagLeft</definition>
        <argsstring>(int cellType)</argsstring>
        <name>checkDiagLeft</name>
        <qualifiedname>GameProcessor::checkDiagLeft</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning diagonal (left-to-right). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a winning diagonal (left-to-right) is found, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="72" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1ae4168b5174d1d3765ef37c7bcce80e9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkDiagRight</definition>
        <argsstring>(int cellType)</argsstring>
        <name>checkDiagRight</name>
        <qualifiedname>GameProcessor::checkDiagRight</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning diagonal (right-to-left). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a winning diagonal (right-to-left) is found, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="80" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a55a928faeaef643114fddc0c30eb9e1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::checkDiagLine</definition>
        <argsstring>(int row, int col, int cellType)</argsstring>
        <name>checkDiagLine</name>
        <qualifiedname>GameProcessor::checkDiagLine</qualifiedname>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Checks for a winning diagonal line starting from a given position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting row. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting column. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player to check for a win (1 or 2).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a line is winnind. </para>
</simplesect>
<simplesect kind="return"><para>false if line is not winning </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="92" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a9523296f8b6e923a815166889dffc3bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GameProcessor::updateCount</definition>
        <argsstring>(int count, int x, int y, int celltype)</argsstring>
        <name>updateCount</name>
        <qualifiedname>GameProcessor::updateCount</qualifiedname>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>celltype</declname>
        </param>
        <briefdescription>
<para>Updates the count of consecutive cells of the same type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The current count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-coordinate of the cell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-coordinate of the cell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>celltype</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the player (1 or 2).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The updated count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="104" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a5bb99e252a49f48391f0197ce29b6d91" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::processNewMove</definition>
        <argsstring>()</argsstring>
        <name>processNewMove</name>
        <qualifiedname>GameProcessor::processNewMove</qualifiedname>
        <briefdescription>
<para>Processes a new move in the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a14400dd82bb980eecd992b4507dbac91" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::processMANMove</definition>
        <argsstring>()</argsstring>
        <name>processMANMove</name>
        <qualifiedname>GameProcessor::processMANMove</qualifiedname>
        <briefdescription>
<para>Processes a move made by a human player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a404f1d11747bd5456e4be2dcd5396a6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::processAIMove</definition>
        <argsstring>()</argsstring>
        <name>processAIMove</name>
        <qualifiedname>GameProcessor::processAIMove</qualifiedname>
        <briefdescription>
<para>Processes a move made by an AI player. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a050b9a9847a0f2f7db003243f70aa819" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::processAIRandomMove</definition>
        <argsstring>(int cellType)</argsstring>
        <name>processAIRandomMove</name>
        <qualifiedname>GameProcessor::processAIRandomMove</qualifiedname>
        <param>
          <type>int</type>
          <declname>cellType</declname>
        </param>
        <briefdescription>
<para>Processes a random move made by the AI player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the AI player (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a5573bd87a0fff2e4c414087477a6c6d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GameProcessor::processAIBestMove</definition>
        <argsstring>(int celltype)</argsstring>
        <name>processAIBestMove</name>
        <qualifiedname>GameProcessor::processAIBestMove</qualifiedname>
        <param>
          <type>int</type>
          <declname>celltype</declname>
        </param>
        <briefdescription>
<para>Processes the best move made by the AI player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the AI player (1 or 2). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::isMANMove</definition>
        <argsstring>()</argsstring>
        <name>isMANMove</name>
        <qualifiedname>GameProcessor::isMANMove</qualifiedname>
        <briefdescription>
<para>Checks if it&apos;s the turn of a human player. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if current move is made by human player. </para>
</simplesect>
<simplesect kind="return"><para>false if current move is made by AI </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="141" column="13" bodyfile="include/game/GameProcessor.h" bodystart="141" bodyend="144"/>
        <references refid="classGameProcessor_1ab86315cb574fa8f30c4557da995aaf92" compoundref="GameProcessor_8h" startline="27">game</references>
        <references refid="classGame_1abb18cb83bdb5b1e24001901add328e16" compoundref="Game_8h" startline="107" endline="107">Game::getFirstPlayer</references>
        <references refid="classGame_1a5a273ef95d4bbf74a45c8334b04c5748" compoundref="Game_8h" startline="121" endline="121">Game::getNextMove</references>
        <references refid="classGame_1a9cf29e6a05f4d49fb8ae25cee7411556" compoundref="Game_8h" startline="114" endline="114">Game::getSecondPlayer</references>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1ae281b585e533039255af373913b1df2e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean GameProcessor::isAIMove</definition>
        <argsstring>()</argsstring>
        <name>isAIMove</name>
        <qualifiedname>GameProcessor::isAIMove</qualifiedname>
        <briefdescription>
<para>Checks if it&apos;s the turn of an AI player. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if current move is made by AI </para>
</simplesect>
<simplesect kind="return"><para>false if current move is made by human player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="152" column="13" bodyfile="include/game/GameProcessor.h" bodystart="152" bodyend="155"/>
        <references refid="classGameProcessor_1ab86315cb574fa8f30c4557da995aaf92" compoundref="GameProcessor_8h" startline="27">game</references>
        <references refid="classGame_1abb18cb83bdb5b1e24001901add328e16" compoundref="Game_8h" startline="107" endline="107">Game::getFirstPlayer</references>
        <references refid="classGame_1a5a273ef95d4bbf74a45c8334b04c5748" compoundref="Game_8h" startline="121" endline="121">Game::getNextMove</references>
        <references refid="classGame_1a9cf29e6a05f4d49fb8ae25cee7411556" compoundref="Game_8h" startline="114" endline="114">Game::getSecondPlayer</references>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a4508bb9143f3e4ea52a61abbf7db8db7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCoordinates" kindref="compound">Coordinates</ref></type>
        <definition>Coordinates GameProcessor::findNewMove</definition>
        <argsstring>()</argsstring>
        <name>findNewMove</name>
        <qualifiedname>GameProcessor::findNewMove</qualifiedname>
        <briefdescription>
<para>Finds a new move for the current player. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates of the new move. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="161" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGameProcessor_1ab11c0deeb780d8995b8b896c1c4b8541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GameProcessor::GameProcessor</definition>
        <argsstring>()</argsstring>
        <name>GameProcessor</name>
        <qualifiedname>GameProcessor::GameProcessor</qualifiedname>
        <briefdescription>
<para>Constructor for the <ref refid="classGameProcessor" kindref="compound">GameProcessor</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="167" column="5" bodyfile="include/game/GameProcessor.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classGameProcessor_1a43b93fd619f6d26a7a857c2ba878bc8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classGame" kindref="compound">Game</ref> *</type>
        <definition>Game * GameProcessor::process</definition>
        <argsstring>(Game *game)</argsstring>
        <name>process</name>
        <qualifiedname>GameProcessor::process</qualifiedname>
        <param>
          <type><ref refid="classGame" kindref="compound">Game</ref> *</type>
          <declname>game</declname>
        </param>
        <briefdescription>
<para>Processes the current state of the game. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>game</parametername>
</parameternamelist>
<parameterdescription>
<para>The current game instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the updated game instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/game/GameProcessor.h" line="175" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class responsible for processing the game logic and moves. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>Board</label>
        <link refid="classBoard"/>
      </node>
      <node id="4">
        <label>FixedQueue</label>
        <link refid="classFixedQueue"/>
      </node>
      <node id="2">
        <label>Game</label>
        <link refid="classGame"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-board</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>GameProcessor</label>
        <link refid="classGameProcessor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-game</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/game/GameProcessor.h" line="22" column="1" bodyfile="include/game/GameProcessor.h" bodystart="23" bodyend="176"/>
    <listofallmembers>
      <member refid="classGameProcessor_1a01805ba1b094f77ff939e721d28dd328" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkCol</name></member>
      <member refid="classGameProcessor_1aff3573a9a2e0561dc2552b8541b4e816" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkDiag</name></member>
      <member refid="classGameProcessor_1a0fc7f6da401fa4b22b201aa693d7c0ba" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkDiagLeft</name></member>
      <member refid="classGameProcessor_1a55a928faeaef643114fddc0c30eb9e1f" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkDiagLine</name></member>
      <member refid="classGameProcessor_1ae4168b5174d1d3765ef37c7bcce80e9a" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkDiagRight</name></member>
      <member refid="classGameProcessor_1a9b4038f01958c4b82058263980cda8fd" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkRow</name></member>
      <member refid="classGameProcessor_1ac92f2239927fdc66a2abef53dba6708b" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>checkToe</name></member>
      <member refid="classGameProcessor_1a900ffa42130b54c463705e7ccb543959" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>cols</name></member>
      <member refid="classGameProcessor_1a4508bb9143f3e4ea52a61abbf7db8db7" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>findNewMove</name></member>
      <member refid="classGameProcessor_1a27ed8da0e891ccdc8c39cc0295b3e888" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>finishGame</name></member>
      <member refid="classGameProcessor_1ab86315cb574fa8f30c4557da995aaf92" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>game</name></member>
      <member refid="classGameProcessor_1ab11c0deeb780d8995b8b896c1c4b8541" prot="public" virt="non-virtual"><scope>GameProcessor</scope><name>GameProcessor</name></member>
      <member refid="classGameProcessor_1ae281b585e533039255af373913b1df2e" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>isAIMove</name></member>
      <member refid="classGameProcessor_1a5cf56ea58b8435b467cafaa7db4c8d0f" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>isMANMove</name></member>
      <member refid="classGameProcessor_1a43b93fd619f6d26a7a857c2ba878bc8e" prot="public" virt="non-virtual"><scope>GameProcessor</scope><name>process</name></member>
      <member refid="classGameProcessor_1a5573bd87a0fff2e4c414087477a6c6d4" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>processAIBestMove</name></member>
      <member refid="classGameProcessor_1a404f1d11747bd5456e4be2dcd5396a6e" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>processAIMove</name></member>
      <member refid="classGameProcessor_1a050b9a9847a0f2f7db003243f70aa819" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>processAIRandomMove</name></member>
      <member refid="classGameProcessor_1a14400dd82bb980eecd992b4507dbac91" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>processMANMove</name></member>
      <member refid="classGameProcessor_1a5bb99e252a49f48391f0197ce29b6d91" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>processNewMove</name></member>
      <member refid="classGameProcessor_1a8701cb939ffff0264ed91cb981dcd4ad" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>queue</name></member>
      <member refid="classGameProcessor_1aba05a15f61f18bb517b0b076fdcc5407" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>rows</name></member>
      <member refid="classGameProcessor_1a9523296f8b6e923a815166889dffc3bd" prot="private" virt="non-virtual"><scope>GameProcessor</scope><name>updateCount</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
