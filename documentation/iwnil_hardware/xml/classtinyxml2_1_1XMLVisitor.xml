<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classtinyxml2_1_1XMLVisitor" kind="class" language="C++" prot="public">
    <compoundname>tinyxml2::XMLVisitor</compoundname>
    <derivedcompoundref refid="classtinyxml2_1_1XMLPrinter" prot="public" virt="non-virtual">tinyxml2::XMLPrinter</derivedcompoundref>
    <includes refid="tinyxml2_8h" local="no">tinyxml2.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1a494e72033d646c47d9c65c502ec62364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tinyxml2::XMLVisitor::~XMLVisitor</definition>
        <argsstring>()</argsstring>
        <name>~XMLVisitor</name>
        <qualifiedname>tinyxml2::XMLVisitor::~XMLVisitor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="537" column="17" bodyfile="include/tinyxml2.h" bodystart="537" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1acb3c22fc5f60eb9db98f533f2761f67d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::VisitEnter</definition>
        <argsstring>(const XMLDocument &amp;)</argsstring>
        <name>VisitEnter</name>
        <qualifiedname>tinyxml2::XMLVisitor::VisitEnter</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1ae966b988a7a28c41e91c5ca17fb2054b">VisitEnter</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a document. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="540" column="22" bodyfile="include/tinyxml2.h" bodystart="540" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1a170e9989cd046ba904f302d087e07086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::VisitExit</definition>
        <argsstring>(const XMLDocument &amp;)</argsstring>
        <name>VisitExit</name>
        <qualifiedname>tinyxml2::XMLVisitor::VisitExit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1a15fc1f2b922f540917dcf52808737b29">VisitExit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a document. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="545" column="22" bodyfile="include/tinyxml2.h" bodystart="545" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1af97980a17dd4e37448b181f5ddfa92b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::VisitEnter</definition>
        <argsstring>(const XMLElement &amp;, const XMLAttribute *)</argsstring>
        <name>VisitEnter</name>
        <qualifiedname>tinyxml2::XMLVisitor::VisitEnter</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1a2ce2aa508c21ac91615093ddb9c282c5">VisitEnter</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLAttribute" kindref="compound">XMLAttribute</ref> *</type>
        </param>
        <briefdescription>
<para>Visit an element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="551" column="22" bodyfile="include/tinyxml2.h" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1a772f10ddc83f881956d32628faa16eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::VisitExit</definition>
        <argsstring>(const XMLElement &amp;)</argsstring>
        <name>VisitExit</name>
        <qualifiedname>tinyxml2::XMLVisitor::VisitExit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1ae99e0a7086543591edfb565f24689098">VisitExit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLElement" kindref="compound">XMLElement</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit an element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="556" column="22" bodyfile="include/tinyxml2.h" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1adc75bd459fc7ba8223b50f0616767f9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::Visit</definition>
        <argsstring>(const XMLDeclaration &amp;)</argsstring>
        <name>Visit</name>
        <qualifiedname>tinyxml2::XMLVisitor::Visit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1a9ceff5cd85e5db65838962174fcdcc46">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLDeclaration" kindref="compound">XMLDeclaration</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a declaration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="562" column="22" bodyfile="include/tinyxml2.h" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1af30233565856480ea48b6fa0d6dec65b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::Visit</definition>
        <argsstring>(const XMLText &amp;)</argsstring>
        <name>Visit</name>
        <qualifiedname>tinyxml2::XMLVisitor::Visit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1a275ae25544a12199ae40b6994ca6e4de">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLText" kindref="compound">XMLText</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a text node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="567" column="22" bodyfile="include/tinyxml2.h" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1acc8147fb5a85f6c65721654e427752d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::Visit</definition>
        <argsstring>(const XMLComment &amp;)</argsstring>
        <name>Visit</name>
        <qualifiedname>tinyxml2::XMLVisitor::Visit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1a3f16a30be1537ac141d9bd2db824ba9e">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLComment" kindref="compound">XMLComment</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit a comment node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="572" column="22" bodyfile="include/tinyxml2.h" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classtinyxml2_1_1XMLVisitor_1a14e4748387c34bf53d24e8119bb1f292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool tinyxml2::XMLVisitor::Visit</definition>
        <argsstring>(const XMLUnknown &amp;)</argsstring>
        <name>Visit</name>
        <qualifiedname>tinyxml2::XMLVisitor::Visit</qualifiedname>
        <reimplementedby refid="classtinyxml2_1_1XMLPrinter_1aa15e1da81e17dea5da6499ac5b08d9d8">Visit</reimplementedby>
        <param>
          <type>const <ref refid="classtinyxml2_1_1XMLUnknown" kindref="compound">XMLUnknown</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Visit an unknown node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tinyxml2.h" line="577" column="22" bodyfile="include/tinyxml2.h" bodystart="577" bodyend="580"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements the interface to the &quot;Visitor pattern&quot; (see the Accept() method.) If you call the Accept() method, it requires being passed a <ref refid="classtinyxml2_1_1XMLVisitor" kindref="compound">XMLVisitor</ref> class to handle callbacks. For nodes that contain other nodes (Document, Element) you will get called with a VisitEnter/VisitExit pair. Nodes that are always leafs are simply called with <ref refid="classtinyxml2_1_1XMLVisitor_1adc75bd459fc7ba8223b50f0616767f9a" kindref="member">Visit()</ref>.</para>
<para>If you return &apos;true&apos; from a Visit method, recursive parsing will continue. If you return false, <bold>no children of this node or its siblings</bold> will be visited.</para>
<para>All flavors of Visit methods have a default implementation that returns &apos;true&apos; (continue visiting). You need to only override methods that are interesting to you.</para>
<para>Generally Accept() is called on the <ref refid="classtinyxml2_1_1XMLDocument" kindref="compound">XMLDocument</ref>, although all nodes support visiting.</para>
<para>You should never change the document from a callback.</para>
<para><simplesect kind="see"><para><ref refid="classtinyxml2_1_1XMLNode_1a81e66df0a44c67a7af17f3b77a152785" kindref="member">XMLNode::Accept()</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>tinyxml2::XMLPrinter</label>
        <link refid="classtinyxml2_1_1XMLPrinter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>tinyxml2::XMLVisitor</label>
        <link refid="classtinyxml2_1_1XMLVisitor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tinyxml2::XMLVisitor</label>
        <link refid="classtinyxml2_1_1XMLVisitor"/>
      </node>
    </collaborationgraph>
    <location file="include/tinyxml2.h" line="534" column="5" bodyfile="include/tinyxml2.h" bodystart="535" bodyend="581"/>
    <listofallmembers>
      <member refid="classtinyxml2_1_1XMLVisitor_1adc75bd459fc7ba8223b50f0616767f9a" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>Visit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1af30233565856480ea48b6fa0d6dec65b" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>Visit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1acc8147fb5a85f6c65721654e427752d7" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>Visit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1a14e4748387c34bf53d24e8119bb1f292" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>Visit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1acb3c22fc5f60eb9db98f533f2761f67d" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>VisitEnter</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1af97980a17dd4e37448b181f5ddfa92b5" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>VisitEnter</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1a170e9989cd046ba904f302d087e07086" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>VisitExit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1a772f10ddc83f881956d32628faa16eb6" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>VisitExit</name></member>
      <member refid="classtinyxml2_1_1XMLVisitor_1a494e72033d646c47d9c65c502ec62364" prot="public" virt="virtual"><scope>tinyxml2::XMLVisitor</scope><name>~XMLVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
